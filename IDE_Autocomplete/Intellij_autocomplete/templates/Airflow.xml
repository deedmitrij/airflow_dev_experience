<templateSet group="Airflow">
  <template name="BashOperator" value="BashOperator(&#10;    task_id=&#39;run_after_loop&#39;,&#10;    bash_command=&#39;echo 1&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow/stable/howto/operator/bash.html#bashoperator&#10;" description="Google Cloud - BashOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="PythonOperator" value="PythonOperator(&#10;    task_id=&#39;print_the_context&#39;,&#10;    python_callable=print_context&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow/stable/howto/operator/python.html#pythonoperator&#10;" description="Google Cloud - PythonOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="PythonVirtualenvOperator" value="PythonVirtualenvOperator(&#10;    task_id=&#39;virtualenv_python&#39;,&#10;    python_callable=callable_virtualenv,&#10;    requirements=[&#39;colorama==0.4.0&#39;],&#10;    system_site_packages=False&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow/stable/howto/operator/python.html#pythonvirtualenvoperator&#10;" description="Google Cloud - PythonVirtualenvOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="ExternalTaskSensor" value="ExternalTaskSensor(&#10;    task_id=&#39;child_task1&#39;,&#10;    external_dag_id=parent_dag.dag_id,&#10;    external_task_id=parent_task.task_id,&#10;    timeout=600,&#10;    allowed_states=[&#39;success&#39;],&#10;    failed_states=[&#39;failed&#39;, &#39;skipped&#39;],&#10;    mode=&#39;reschedule&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow/stable/howto/operator/external_task_sensor.html#externaltasksensor&#10;" description="Google Cloud - ExternalTaskSensor" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="HttpSensor" value="HttpSensor(&#10;    task_id=&#39;http_sensor_check&#39;,&#10;    http_conn_id=&#39;http_default&#39;,&#10;    endpoint=&#39;,&#10;    request_params={},&#10;    response_check=lambda response: &#39;httpbin&#39; in response.text,&#10;    poke_interval=5,&#10;    dag=dag&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-http/stable/operators.html#httpsensor&#10;" description="Google Cloud - HttpSensor" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="SimpleHttpOperator" value="SimpleHttpOperator(&#10;    task_id=&#39;post_op&#39;,&#10;    endpoint=&#39;post&#39;,&#10;    data=json.dumps({&#39;priority&#39;: 5}),&#10;    headers={&#39;Content-Type&#39;: &#39;application/json&#39;},&#10;    response_check=lambda response: response.json()[&#39;json&#39;][&#39;priority&#39;] == 5,&#10;    dag=dag&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-http/stable/operators.html#simplehttpoperator&#10;" description="Google Cloud - SimpleHttpOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="MySqlOperator" value="MySqlOperator(&#10;    task_id=&#39;create_table_mysql&#39;, mysql_conn_id=&#39;mysql_conn_id&#39;, sql=r&#39;&#39;DROP TABLE table_name;&#39;&#39;, dag=dag&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-mysql/stable/operators.html#id1&#10;" description="Google Cloud - MySqlOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="JdbcOperator" value="JdbcOperator(&#10;        task_id=&#39;insert_data&#39;,&#10;        sql=&#39;insert into my_schema.my_table select dt, value from my_schema.source_data&#39;,&#10;        jdbc_conn_id=&#39;my_jdbc_connection&#39;,&#10;        autocommit=True,&#10;        dag=dag,&#10;    )&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-jdbc/stable/operators.html#usage&#10;" description="Google Cloud - JdbcOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="BeamRunPythonPipelineOperator" value="BeamRunPythonPipelineOperator(&#10;    task_id=&#39;start_python_pipeline_local_direct_runner&#39;,&#10;    py_file=&#39;apache_beam.examples.wordcount&#39;,&#10;    py_options=[&#39;-m&#39;],&#10;    py_requirements=[&#39;apache-beam[gcp]==2.26.0&#39;],&#10;    py_interpreter=&#39;python3&#39;,&#10;    py_system_site_packages=False&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-apache-beam/stable/operators.html#python-pipelines-with-directrunner&#10;" description="Google Cloud - BeamRunPythonPipelineOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="GCSToLocalFilesystemOperator" value="GCSToLocalFilesystemOperator(&#10;    task_id=&#39;jar_to_local_direct_runner&#39;,&#10;    bucket=GCS_JAR_DIRECT_RUNNER_BUCKET_NAME,&#10;    object_name=GCS_JAR_DIRECT_RUNNER_OBJECT_NAME,&#10;    filename=&#39;/tmp/beam_wordcount_direct_runner_{{ ds_nodash }}.jar&#39;&#10;)&#10;&#10;start_java_pipeline_direct_runner = BeamRunJavaPipelineOperator(&#10;    task_id=&#39;start_java_pipeline_direct_runner&#39;,&#10;    jar=&#39;/tmp/beam_wordcount_direct_runner_{{ ds_nodash }}.jar&#39;,&#10;    pipeline_options={&#10;        &#39;output&#39;: &#39;/tmp/start_java_pipeline_direct_runner&#39;,&#10;        &#39;inputFile&#39;: GCS_INPUT,&#10;    },&#10;    job_class=&#39;org.apache.beam.examples.WordCount&#39;&#10;)&#10;&#10;jar_to_local_direct_runner &gt;&gt; start_java_pipeline_direct_runner&#39;&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-apache-beam/stable/operators.html#java-pipelines-with-directrunner&#10;" description="Google Cloud - GCSToLocalFilesystemOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CassandraTableSensor" value="CassandraTableSensor(&#10;    task_id=&#39;cassandra_table_sensor&#39;,&#10;    cassandra_conn_id=&#39;cassandra_default&#39;,&#10;    table=&#39;keyspace_name.table_name&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-apache-cassandra/stable/operators.html#waiting-for-a-table-to-be-created&#10;" description="Google Cloud - CassandraTableSensor" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CassandraRecordSensor" value="CassandraRecordSensor(&#10;    task_id=&#39;cassandra_record_sensor&#39;,&#10;    cassandra_conn_id=&#39;cassandra_default&#39;,&#10;    table=&#39;keyspace_name.table_name&#39;,&#10;    keys={&#39;p1&#39;: &#39;v1&#39;, &#39;p2&#39;: &#39;v2&#39;}&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-apache-cassandra/stable/operators.html#waiting-for-a-record-to-be-created&#10;" description="Google Cloud - CassandraRecordSensor" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="SparkJDBCOperator" value="SparkJDBCOperator(&#10;    cmd_type=&#39;jdbc_to_spark&#39;,&#10;    jdbc_table=&#39;foo&#39;,&#10;    spark_jars=&#39;${SPARK_HOME}/jars/postgresql-42.2.12.jar&#39;,&#10;    jdbc_driver=&#39;org.postgresql.Driver&#39;,&#10;    metastore_table=&#39;bar&#39;,&#10;    save_mode=&#39;overwrite&#39;,&#10;    save_format=&#39;JSON&#39;,&#10;    task_id=&#39;jdbc_to_spark_job&#39;&#10;)&#10;&#10;spark_to_jdbc_job = SparkJDBCOperator(&#10;    cmd_type=&#39;spark_to_jdbc&#39;,&#10;    jdbc_table=&#39;foo&#39;,&#10;    spark_jars=&#39;${SPARK_HOME}/jars/postgresql-42.2.12.jar&#39;,&#10;    jdbc_driver=&#39;org.postgresql.Driver&#39;,&#10;    metastore_table=&#39;bar&#39;,&#10;    save_mode=&#39;append&#39;,&#10;    task_id=&#39;spark_to_jdbc_job&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-apache-spark/stable/operators.html#using-the-operator&#10;" description="Google Cloud - SparkJDBCOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="SparkSqlOperator" value="SparkSqlOperator(sql=&#39;SELECT * FROM bar&#39;, master=&#39;local&#39;, task_id=&#39;sql_job&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-apache-spark/stable/operators.html#id1&#10;" description="Google Cloud - SparkSqlOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="SparkSubmitOperator" value="SparkSubmitOperator(&#10;    application=&#39;${SPARK_HOME}/examples/src/main/python/pi.py&#39;, task_id=&#39;submit_job&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-apache-spark/stable/operators.html#id3&#10;" description="Google Cloud - SparkSubmitOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="KubernetesPodOperator" value="KubernetesPodOperator(&#10;        namespace=&#39;default&#39;,&#10;        image=&#39;quay.io/apache/bash&#39;,&#10;        image_pull_secrets=[k8s.V1LocalObjectReference(&#39;testquay&#39;)],&#10;        cmds=[&#39;bash&#39;, &#39;-cx&#39;],&#10;        arguments=[&#39;echo&#39;, &#39;10&#39;, &#39;echo pwd&#39;],&#10;        labels={&#39;foo&#39;: &#39;bar&#39;},&#10;        name=&#39;airflow-private-image-pod&#39;,&#10;        is_delete_operator_pod=True,&#10;        in_cluster=True,&#10;        task_id=&#39;task-two&#39;,&#10;        get_logs=True,&#10;    )&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-cncf-kubernetes/stable/operators.html#how-to-use-private-images-container-registry&#10;" description="Google Cloud - KubernetesPodOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudFirestoreExportDatabaseOperator" value="CloudFirestoreExportDatabaseOperator(&#10;    task_id=&#39;export_database_to_gcs&#39;,&#10;    project_id=FIRESTORE_PROJECT_ID,&#10;    body={&#39;outputUriPrefix&#39;: EXPORT_DESTINATION_URL, &#39;collectionIds&#39;: [EXPORT_COLLECTION_ID]}&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/firebase/firestore.html#export-database&#10;" description="Google Cloud - CloudFirestoreExportDatabaseOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="GoogleAnalyticsListAccountsOperator" value="GoogleAnalyticsListAccountsOperator(task_id=&#39;list_account&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/marketing_platform/analytics.html#list-the-accounts&#10;" description="Google Cloud - GoogleAnalyticsListAccountsOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="GoogleAnalyticsGetAdsLinkOperator" value="GoogleAnalyticsGetAdsLinkOperator(&#10;    web_property_ad_words_link_id=WEB_PROPERTY_AD_WORDS_LINK_ID,&#10;    web_property_id=WEB_PROPERTY_ID,&#10;    account_id=ACCOUNT_ID,&#10;    task_id=&#39;get_ad_words_link&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/marketing_platform/analytics.html#get-ad-words-link&#10;" description="Google Cloud - GoogleAnalyticsGetAdsLinkOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="GoogleAnalyticsRetrieveAdsLinksListOperator" value="GoogleAnalyticsRetrieveAdsLinksListOperator(&#10;    task_id=&#39;list_ad_link&#39;, account_id=ACCOUNT_ID, web_property_id=WEB_PROPERTY_ID&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/marketing_platform/analytics.html#list-google-ads-links&#10;" description="Google Cloud - GoogleAnalyticsRetrieveAdsLinksListOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="GoogleCampaignManagerDeleteReportOperator" value="GoogleCampaignManagerDeleteReportOperator(&#10;    profile_id=PROFILE_ID, report_name=REPORT_NAME, task_id=&#39;delete_report&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/marketing_platform/campaign_manager.html#deleting-a-report&#10;" description="Google Cloud - GoogleCampaignManagerDeleteReportOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="GoogleCampaignManagerDownloadReportOperator" value="GoogleCampaignManagerDownloadReportOperator(&#10;    task_id=&#39;get_report&#39;,&#10;    profile_id=PROFILE_ID,&#10;    report_id=report_id,&#10;    file_id=file_id,&#10;    report_name=&#39;test_report.csv&#39;,&#10;    bucket_name=BUCKET&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/marketing_platform/campaign_manager.html#downloading-a-report&#10;" description="Google Cloud - GoogleCampaignManagerDownloadReportOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="GoogleCampaignManagerReportSensor" value="GoogleCampaignManagerReportSensor(&#10;    task_id=&#39;wait_for_report&#39;,&#10;    profile_id=PROFILE_ID,&#10;    report_id=report_id,&#10;    file_id=file_id&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/marketing_platform/campaign_manager.html#waiting-for-a-report&#10;" description="Google Cloud - GoogleCampaignManagerReportSensor" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="GoogleCampaignManagerInsertReportOperator" value="GoogleCampaignManagerInsertReportOperator(&#10;    profile_id=PROFILE_ID, report=REPORT, task_id=&#39;create_report&#39;&#10;)report_id = &#39;{{ task_instance.xcom_pull(&#39;create_report&#39;)[&#39;id&#39;] }}&#39;&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/marketing_platform/campaign_manager.html#inserting-a-new-report&#10;" description="Google Cloud - GoogleCampaignManagerInsertReportOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="GoogleCampaignManagerRunReportOperator" value="GoogleCampaignManagerRunReportOperator(&#10;    profile_id=PROFILE_ID, report_id=report_id, task_id=&#39;run_report&#39;&#10;)file_id = &#39;{{ task_instance.xcom_pull(&#39;run_report&#39;)[&#39;id&#39;] }}&#39;&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/marketing_platform/campaign_manager.html#running-a-report&#10;" description="Google Cloud - GoogleCampaignManagerRunReportOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="GoogleCampaignManagerBatchInsertConversionsOperator" value="GoogleCampaignManagerBatchInsertConversionsOperator(&#10;    task_id=&#39;insert_conversion&#39;,&#10;    profile_id=PROFILE_ID,&#10;    conversions=[CONVERSION],&#10;    encryption_source=&#39;AD_SERVING&#39;,&#10;    encryption_entity_type=&#39;DCM_ADVERTISER&#39;,&#10;    encryption_entity_id=ENCRYPTION_ENTITY_ID&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/marketing_platform/campaign_manager.html#inserting-a-conversions&#10;" description="Google Cloud - GoogleCampaignManagerBatchInsertConversionsOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="GoogleCampaignManagerBatchUpdateConversionsOperator" value="GoogleCampaignManagerBatchUpdateConversionsOperator(&#10;    task_id=&#39;update_conversion&#39;,&#10;    profile_id=PROFILE_ID,&#10;    conversions=[CONVERSION_UPDATE],&#10;    encryption_source=&#39;AD_SERVING&#39;,&#10;    encryption_entity_type=&#39;DCM_ADVERTISER&#39;,&#10;    encryption_entity_id=ENCRYPTION_ENTITY_ID,&#10;    max_failed_updates=1&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/marketing_platform/campaign_manager.html#updating-a-conversions&#10;" description="Google Cloud - GoogleCampaignManagerBatchUpdateConversionsOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="GoogleDisplayVideo360CreateReportOperator" value="GoogleDisplayVideo360CreateReportOperator(body=REPORT, task_id=&#39;create_report&#10;)report_id = &#39;{{ task_instance.xcom_pull(&#39;create_report&#39;, key=&#39;report_id&#39;) }}&#39;&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/marketing_platform/display_video.html#creating-a-report&#10;" description="Google Cloud - GoogleDisplayVideo360CreateReportOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="GoogleDisplayVideo360DeleteReportOperator" value="GoogleDisplayVideo360DeleteReportOperator(report_id=report_id, task_id=&#39;delete_report&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/marketing_platform/display_video.html#deleting-a-report&#10;" description="Google Cloud - GoogleDisplayVideo360DeleteReportOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="GoogleDisplayVideo360ReportSensor" value="GoogleDisplayVideo360ReportSensor(task_id=&#39;wait_for_report&#39;, report_id=report_id)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/marketing_platform/display_video.html#waiting-for-report&#10;" description="Google Cloud - GoogleDisplayVideo360ReportSensor" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="GoogleDisplayVideo360DownloadReportOperator" value="GoogleDisplayVideo360DownloadReportOperator(&#10;    report_id=report_id,&#10;    task_id=&#39;get_report&#39;,&#10;    bucket_name=BUCKET,&#10;    report_name=&#39;test1.csv&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/marketing_platform/display_video.html#downloading-a-report&#10;" description="Google Cloud - GoogleDisplayVideo360DownloadReportOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="GoogleDisplayVideo360RunReportOperator" value="GoogleDisplayVideo360RunReportOperator(&#10;    report_id=report_id, params=PARAMS, task_id=&#39;run_report&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/marketing_platform/display_video.html#running-a-report&#10;" description="Google Cloud - GoogleDisplayVideo360RunReportOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="GoogleDisplayVideo360DownloadLineItemsOperator" value="GoogleDisplayVideo360DownloadLineItemsOperator(&#10;    task_id=&#39;download_line_items&#39;,&#10;    request_body=DOWNLOAD_LINE_ITEMS_REQUEST,&#10;    bucket_name=BUCKET,&#10;    object_name=OBJECT_NAME,&#10;    gzip=False&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/marketing_platform/display_video.html#downloading-line-items&#10;" description="Google Cloud - GoogleDisplayVideo360DownloadLineItemsOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="GoogleDisplayVideo360UploadLineItemsOperator" value="GoogleDisplayVideo360UploadLineItemsOperator(&#10;    task_id=&#39;upload_line_items&#39;,&#10;    bucket_name=BUCKET,&#10;    object_name=BUCKET_FILE_LOCATION&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/marketing_platform/display_video.html#upload-line-items&#10;" description="Google Cloud - GoogleDisplayVideo360UploadLineItemsOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="GoogleDisplayVideo360CreateSDFDownloadTaskOperator" value="GoogleDisplayVideo360CreateSDFDownloadTaskOperator(&#10;    task_id=&#39;create_sdf_download_task&#39;, body_request=CREATE_SDF_DOWNLOAD_TASK_BODY_REQUEST&#10;)operation_name = &#39;{{ task_instance.xcom_pull(&#39;create_sdf_download_task&#39;)[&#39;name&#39;] }}&#39;&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/marketing_platform/display_video.html#create-sdf-download-task&#10;" description="Google Cloud - GoogleDisplayVideo360CreateSDFDownloadTaskOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="GoogleDisplayVideo360SDFtoGCSOperator" value="GoogleDisplayVideo360SDFtoGCSOperator(&#10;    task_id=&#39;save_sdf_in_gcs&#39;,&#10;    operation_name=operation_name,&#10;    bucket_name=BUCKET,&#10;    object_name=BUCKET_FILE_LOCATION,&#10;    gzip=False&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/marketing_platform/display_video.html#save-sdf-files-in-the-google-cloud-storage&#10;" description="Google Cloud - GoogleDisplayVideo360SDFtoGCSOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="GoogleDisplayVideo360GetSDFDownloadOperationSensor" value="GoogleDisplayVideo360GetSDFDownloadOperationSensor(&#10;    task_id=&#39;wait_for_operation&#39;,&#10;    operation_name=operation_name&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/marketing_platform/display_video.html#waiting-for-sdf-operation&#10;" description="Google Cloud - GoogleDisplayVideo360GetSDFDownloadOperationSensor" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="GoogleSearchAdsInsertReportOperator" value="GoogleSearchAdsInsertReportOperator(report=REPORT, task_id=&#39;generate_report&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/marketing_platform/search_ads.html#inserting-a-report&#10;" description="Google Cloud - GoogleSearchAdsInsertReportOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="GoogleSearchAdsReportSensor" value="GoogleSearchAdsReportSensor(report_id=report_id, task_id=&#39;wait_for_report&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/marketing_platform/search_ads.html#awaiting-for-a-report&#10;" description="Google Cloud - GoogleSearchAdsReportSensor" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="GoogleSearchAdsDownloadReportOperator" value="GoogleSearchAdsDownloadReportOperator(&#10;    report_id=report_id, bucket_name=GCS_BUCKET, task_id=&#39;download_report&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/marketing_platform/search_ads.html#downloading-a-report&#10;" description="Google Cloud - GoogleSearchAdsDownloadReportOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="GoogleSheetsCreateSpreadsheetOperator" value="GoogleSheetsCreateSpreadsheetOperator(&#10;    task_id=&#39;create_spreadsheet&#39;, spreadsheet=SPREADSHEET&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/suite/sheets.html#create-spreadsheet&#10;" description="Google Cloud - GoogleSheetsCreateSpreadsheetOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="GoogleAdsToGcsOperator" value="GoogleAdsToGcsOperator(&#10;    client_ids=CLIENT_IDS,&#10;    query=QUERY,&#10;    attributes=FIELDS_TO_EXTRACT,&#10;    obj=GCS_OBJ_PATH,&#10;    bucket=BUCKET,&#10;    task_id=&#39;run_operator&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/ads.html#google-ads-to-gcs&#10;" description="Google Cloud - GoogleAdsToGcsOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="GoogleAdsListAccountsOperator" value="GoogleAdsListAccountsOperator(&#10;    task_id=&#39;list_accounts&#39;, bucket=BUCKET, object_name=GCS_ACCOUNTS_CSV&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/ads.html#upload-google-ads-accounts-to-gcs&#10;" description="Google Cloud - GoogleAdsListAccountsOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="AzureFileShareToGCSOperator" value="AzureFileShareToGCSOperator(&#10;    task_id=&#39;sync_azure_files_with_gcs&#39;,&#10;    share_name=AZURE_SHARE_NAME,&#10;    dest_gcs=DEST_GCS_BUCKET,&#10;    directory_name=AZURE_DIRECTORY_NAME,&#10;    wasb_conn_id=&#39;azure_fileshare_default&#39;,&#10;    gcp_conn_id=&#39;google_cloud_default&#39;,&#10;    replace=False,&#10;    gzip=True,&#10;    google_impersonation_chain=None&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/transfer/azure_fileshare_to_gcs.html#data-transfer&#10;" description="Google Cloud - AzureFileShareToGCSOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="FacebookAdsReportToGcsOperator" value="FacebookAdsReportToGcsOperator(&#10;        task_id=&#39;run_fetch_data&#39;,&#10;        start_date=days_ago(2),&#10;        owner=&#39;airflow&#39;,&#10;        bucket_name=GCS_BUCKET,&#10;        params=PARAMS,&#10;        fields=FIELDS,&#10;        gcp_conn_id=GCS_CONN_ID,&#10;        object_name=GCS_OBJ_PATH,&#10;    )&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/transfer/facebook_ads_to_gcs.html#facebookadsreporttogcsoperator&#10;" description="Google Cloud - FacebookAdsReportToGcsOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="GCSToGCSOperator" value="GCSToGCSOperator(&#10;    task_id=&#39;copy_single_gcs_file&#39;,&#10;    source_bucket=BUCKET_1_SRC,&#10;    source_object=OBJECT_1,&#10;    destination_bucket=BUCKET_1_DST,  # If not supplied the source_bucket value will be used&#10;    destination_object=&#39;backup_&#39; + OBJECT_1,  # If not supplied the source_object value will be used&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/transfer/gcs_to_gcs.html#copy-single-file&#10;" description="Google Cloud - GCSToGCSOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="GCSSynchronizeBucketsOperator" value="GCSSynchronizeBucketsOperator(&#10;    task_id=&#39;sync_bucket&#39;, source_bucket=BUCKET_1_SRC, destination_bucket=BUCKET_1_DST&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/transfer/gcs_to_gcs.html#basic-synchronization&#10;" description="Google Cloud - GCSSynchronizeBucketsOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="GCSToGoogleDriveOperator" value="GCSToGoogleDriveOperator(&#10;    task_id=&#39;copy_single_file&#39;,&#10;    source_bucket=GCS_TO_GDRIVE_BUCKET,&#10;    source_object=&#39;sales/january.avro&#39;,&#10;    destination_object=&#39;copied_sales/january-backup.avro&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/transfer/gcs_to_gdrive.html#copy-single-files&#10;" description="Google Cloud - GCSToGoogleDriveOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="GCSToSFTPOperator" value="GCSToSFTPOperator(&#10;    task_id=&#39;file-copy-gsc-to-sftp&#39;,&#10;    sftp_conn_id=SFTP_CONN_ID,&#10;    source_bucket=BUCKET_SRC,&#10;    source_object=OBJECT_SRC_1,&#10;    destination_path=DESTINATION_PATH_1&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/transfer/gcs_to_sftp.html#copying-a-single-file&#10;" description="Google Cloud - GCSToSFTPOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="GCSToGoogleSheetsOperator" value="GCSToGoogleSheetsOperator(&#10;    task_id=&#39;upload_gcs_to_sheet&#39;,&#10;    bucket_name=BUCKET,&#10;    object_name=&#39;{{ task_instance.xcom_pull(&#39;upload_sheet_to_gcs&#39;)[0] }}&#39;,&#10;    spreadsheet_id=NEW_SPREADSHEET_ID&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/transfer/gcs_to_sheets.html#upload-data-from-gcs-to-google-sheets&#10;" description="Google Cloud - GCSToGoogleSheetsOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="GoogleDriveToGCSOperator" value="GoogleDriveToGCSOperator(&#10;    task_id=&#39;upload_gdrive_object_to_gcs&#39;,&#10;    folder_id=FOLDER_ID,&#10;    file_name=FILE_NAME,&#10;    destination_bucket=BUCKET,&#10;    destination_object=OBJECT&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/transfer/gdrive_to_gcs.html#copy-single-files&#10;" description="Google Cloud - GoogleDriveToGCSOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="GoogleDriveToLocalOperator" value="GoogleDriveToLocalOperator(&#10;    task_id=&#39;download_from_gdrive_to_local&#39;,&#10;    folder_id=FOLDER_ID,&#10;    file_name=FILE_NAME,&#10;    output_file=OUTPUT_FILE&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/transfer/gdrive_to_local.html#gcstolocalfilesystemoperator&#10;" description="Google Cloud - GoogleDriveToLocalOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="LocalFilesystemToGCSOperator" value="LocalFilesystemToGCSOperator(&#10;        task_id=&#39;upload_file&#39;,&#10;        src=PATH_TO_UPLOAD_FILE,&#10;        dst=DESTINATION_FILE_LOCATION,&#10;        bucket=BUCKET_NAME,&#10;    )&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/transfer/local_to_gcs.html#localfilesystemtogcsoperator&#10;" description="Google Cloud - LocalFilesystemToGCSOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="MySQLToGCSOperator" value="MySQLToGCSOperator(&#10;        task_id=&#39;mysql_to_gcs&#39;, sql=SQL_QUERY, bucket=GCS_BUCKET, filename=FILENAME, export_format=&#39;csv&#39;&#10;    )&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/transfer/mysql_to_gcs.html#mysqltogcsoperator&#10;" description="Google Cloud - MySQLToGCSOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="OracleToGCSOperator" value="OracleToGCSOperator(&#10;        task_id=&#39;oracle_to_gcs&#39;, sql=SQL_QUERY, bucket=GCS_BUCKET, filename=FILENAME, export_format=&#39;csv&#39;&#10;    )&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/transfer/oracle_to_gcs.html#oracletogcsoperator&#10;" description="Google Cloud - OracleToGCSOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="PrestoToGCSOperator" value="PrestoToGCSOperator(&#10;    task_id=&#39;presto_to_gcs_basic&#39;,&#10;    sql=f&#39;select * from {SOURCE_MULTIPLE_TYPES}&#39;,&#10;    bucket=GCS_BUCKET,&#10;    filename=f&#39;{safe_name(SOURCE_MULTIPLE_TYPES)}.{{}}.json&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/transfer/presto_to_gcs.html#data-transfer&#10;" description="Google Cloud - PrestoToGCSOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="BigQueryExecuteQueryOperator" value="BigQueryExecuteQueryOperator(&#10;    task_id=&#39;read_data_from_gcs_many_chunks&#39;,&#10;    sql=f&#39;SELECT COUNT(*) FROM `{GCP_PROJECT_ID}.{DATASET_NAME}.{safe_name(SOURCE_CUSTOMER_TABLE)}`&#39;,&#10;    use_legacy_sql=False&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/transfer/presto_to_gcs.html#division-of-the-result-into-multiple-files&#10;" description="Google Cloud - BigQueryExecuteQueryOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="BigQueryCreateExternalTableOperator" value="BigQueryCreateExternalTableOperator(&#10;    task_id=&#39;create_external_table_multiple_types&#39;,&#10;    bucket=GCS_BUCKET,&#10;    source_objects=[f&#39;{safe_name(SOURCE_MULTIPLE_TYPES)}.*.json&#39;],&#10;    source_format=&#39;NEWLINE_DELIMITED_JSON&#39;,&#10;    destination_project_dataset_table=f&#39;{DATASET_NAME}.{safe_name(SOURCE_MULTIPLE_TYPES)}&#39;,&#10;    schema_object=f&#39;{safe_name(SOURCE_MULTIPLE_TYPES)}-schema.json&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/transfer/presto_to_gcs.html#querying-data-using-the-bigquery&#10;" description="Google Cloud - BigQueryCreateExternalTableOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="SalesforceToGcsOperator" value="SalesforceToGcsOperator(&#10;        query=QUERY,&#10;        include_deleted=True,&#10;        bucket_name=GCS_BUCKET,&#10;        object_name=GCS_OBJ_PATH,&#10;        salesforce_conn_id=SALESFORCE_CONN_ID,&#10;        export_format=&#39;csv&#39;,&#10;        coerce_to_timestamp=False,&#10;        record_time_added=False,&#10;        gcp_conn_id=GCS_CONN_ID,&#10;        task_id=&#39;upload_to_gcs&#39;,&#10;        dag=dag,&#10;    )&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/transfer/salesforce_to_gcs.html#salesforcetogcsoperator&#10;" description="Google Cloud - SalesforceToGcsOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="SFTPToGCSOperator" value="SFTPToGCSOperator(&#10;    task_id=&#39;file-copy-sftp-to-gcs&#39;,&#10;    source_path=os.path.join(TMP_PATH, DIR, OBJECT_SRC_1),&#10;    destination_bucket=BUCKET_SRC&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/transfer/sftp_to_gcs.html#copying-single-files&#10;" description="Google Cloud - SFTPToGCSOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="GoogleSheetsToGCSOperator" value="GoogleSheetsToGCSOperator(&#10;    task_id=&#39;upload_sheet_to_gcs&#39;,&#10;    destination_bucket=BUCKET,&#10;    spreadsheet_id=SPREADSHEET_ID&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/transfer/sheets_to_gcs.html#upload-data-from-google-sheets-to-gcs&#10;" description="Google Cloud - GoogleSheetsToGCSOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="BigQueryCreateEmptyDatasetOperator" value="BigQueryCreateEmptyDatasetOperator(task_id=&#39;create-dataset&#39;, dataset_id=DATASET_NAME)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/bigquery.html#create-dataset&#10;" description="Google Cloud - BigQueryCreateEmptyDatasetOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="BigQueryGetDatasetOperator" value="BigQueryGetDatasetOperator(task_id=&#39;get-dataset&#39;, dataset_id=DATASET_NAME)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/bigquery.html#get-dataset-details&#10;" description="Google Cloud - BigQueryGetDatasetOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="BigQueryGetDatasetTablesOperator" value="BigQueryGetDatasetTablesOperator(&#10;    task_id=&#39;get_dataset_tables&#39;, dataset_id=DATASET_NAME&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/bigquery.html#list-tables-in-dataset&#10;" description="Google Cloud - BigQueryGetDatasetTablesOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="BigQueryUpdateTableOperator" value="BigQueryUpdateTableOperator(&#10;    task_id=&#39;update_table&#39;,&#10;    dataset_id=DATASET_NAME,&#10;    table_id=&#39;test_table&#39;,&#10;    fields=[&#10;        {&#39;name&#39;: &#39;emp_name&#39;, &#39;type&#39;: &#39;STRING&#39;, &#39;mode&#39;: &#39;REQUIRED&#39;},&#10;        {&#39;name&#39;: &#39;salary&#39;, &#39;type&#39;: &#39;INTEGER&#39;, &#39;mode&#39;: &#39;NULLABLE&#39;},&#10;    ],&#10;    table_resource={&#10;        &#39;friendlyName&#39;: &#39;Updated Table&#39;,&#10;        &#39;description&#39;: &#39;Updated Table&#39;,&#10;    }&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/bigquery.html#update-table&#10;" description="Google Cloud - BigQueryUpdateTableOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="BigQueryPatchDatasetOperator" value="BigQueryPatchDatasetOperator(&#10;    task_id=&#39;patch_dataset&#39;,&#10;    dataset_id=DATASET_NAME,&#10;    dataset_resource={&#10;        &#39;friendlyName&#39;: &#39;Patched Dataset&#39;,&#10;        &#39;description&#39;: &#39;Patched dataset&#39;,&#10;    }&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/bigquery.html#patch-dataset&#10;" description="Google Cloud - BigQueryPatchDatasetOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="BigQueryUpdateDatasetOperator" value="BigQueryUpdateDatasetOperator(&#10;    task_id=&#39;update_dataset&#39;,&#10;    dataset_id=DATASET_NAME,&#10;    dataset_resource={&#39;description&#39;: &#39;Updated dataset&#39;}&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/bigquery.html#update-dataset&#10;" description="Google Cloud - BigQueryUpdateDatasetOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="BigQueryDeleteDatasetOperator" value="BigQueryDeleteDatasetOperator(&#10;    task_id=&#39;delete_dataset&#39;, dataset_id=DATASET_NAME, delete_contents=True&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/bigquery.html#delete-dataset&#10;" description="Google Cloud - BigQueryDeleteDatasetOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="BigQueryCreateEmptyTableOperator" value="BigQueryCreateEmptyTableOperator(&#10;    task_id=&#39;create_table&#39;,&#10;    dataset_id=DATASET_NAME,&#10;    table_id=&#39;test_table&#39;,&#10;    schema_fields=[&#10;        {&#39;name&#39;: &#39;emp_name&#39;, &#39;type&#39;: &#39;STRING&#39;, &#39;mode&#39;: &#39;REQUIRED&#39;},&#10;        {&#39;name&#39;: &#39;salary&#39;, &#39;type&#39;: &#39;INTEGER&#39;, &#39;mode&#39;: &#39;NULLABLE&#39;},&#10;    ]&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/bigquery.html#create-native-table&#10;" description="Google Cloud - BigQueryCreateEmptyTableOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="BigQueryGetDataOperator" value="BigQueryGetDataOperator(&#10;    task_id=&#39;get_data&#39;,&#10;    dataset_id=DATASET_NAME,&#10;    table_id=TABLE_1,&#10;    max_results=10,&#10;    selected_fields=&#39;value,name&#39;,&#10;    location=location&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/bigquery.html#fetch-data-from-table&#10;" description="Google Cloud - BigQueryGetDataOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="BigQueryUpsertTableOperator" value="BigQueryUpsertTableOperator(&#10;    task_id=&#39;upsert_table&#39;,&#10;    dataset_id=DATASET_NAME,&#10;    table_resource={&#10;        &#39;tableReference&#39;: {&#39;tableId&#39;: &#39;test_table_id&#39;},&#10;        &#39;expirationTime&#39;: (int(time.time()) + 300) * 1000,&#10;    }&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/bigquery.html#upsert-table&#10;" description="Google Cloud - BigQueryUpsertTableOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="BigQueryDeleteTableOperator" value="BigQueryDeleteTableOperator(&#10;    task_id=&#39;delete_table&#39;,&#10;    deletion_dataset_table=f&#39;{PROJECT_ID}.{DATASET_NAME}.test_table&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/bigquery.html#delete-table&#10;" description="Google Cloud - BigQueryDeleteTableOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="BigQueryInsertJobOperator" value="BigQueryInsertJobOperator(&#10;    task_id=&#39;insert_query_job&#39;,&#10;    configuration={&#10;        &#39;query&#39;: {&#10;            &#39;query&#39;: INSERT_ROWS_QUERY,&#10;            &#39;useLegacySql&#39;: False,&#10;        }&#10;    },&#10;    location=location&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/bigquery.html#execute-bigquery-jobs&#10;" description="Google Cloud - BigQueryInsertJobOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="BigQueryCheckOperator" value="BigQueryCheckOperator(&#10;    task_id=&#39;check_count&#39;,&#10;    sql=f&#39;SELECT COUNT(*) FROM {DATASET_NAME}.{TABLE_1}&#39;,&#10;    use_legacy_sql=False,&#10;    location=location&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/bigquery.html#check-if-query-result-has-data&#10;" description="Google Cloud - BigQueryCheckOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="BigQueryValueCheckOperator" value="BigQueryValueCheckOperator(&#10;    task_id=&#39;check_value&#39;,&#10;    sql=f&#39;SELECT COUNT(*) FROM {DATASET_NAME}.{TABLE_1}&#39;,&#10;    pass_value=4,&#10;    use_legacy_sql=False,&#10;    location=location&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/bigquery.html#compare-query-result-to-pass-value&#10;" description="Google Cloud - BigQueryValueCheckOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="BigQueryIntervalCheckOperator" value="BigQueryIntervalCheckOperator(&#10;    task_id=&#39;check_interval&#39;,&#10;    table=f&#39;{DATASET_NAME}.{TABLE_1}&#39;,&#10;    days_back=1,&#10;    metrics_thresholds={&#39;COUNT(*): 1.5},&#10;    use_legacy_sql=False,&#10;    location=location&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/bigquery.html#compare-metrics-over-time&#10;" description="Google Cloud - BigQueryIntervalCheckOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="BigQueryTableExistenceSensor" value="BigQueryTableExistenceSensor(&#10;    task_id=&#39;check_table_exists&#39;, project_id=PROJECT_ID, dataset_id=DATASET_NAME, table_id=TABLE_NAME&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/bigquery.html#check-that-a-table-exists&#10;" description="Google Cloud - BigQueryTableExistenceSensor" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="BigQueryTablePartitionExistenceSensor" value="BigQueryTablePartitionExistenceSensor(&#10;    task_id=&#39;check_table_partition_exists&#39;,&#10;    project_id=PROJECT_ID,&#10;    dataset_id=DATASET_NAME,&#10;    table_id=TABLE_NAME,&#10;    partition_id=PARTITION_NAME&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/bigquery.html#check-that-a-table-partition-exists&#10;" description="Google Cloud - BigQueryTablePartitionExistenceSensor" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudDataFusionRestartInstanceOperator" value="CloudDataFusionRestartInstanceOperator(&#10;    location=LOCATION, instance_name=INSTANCE_NAME, task_id=&#39;restart_instance&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/datafusion.html#restart-datafusion-instance&#10;" description="Google Cloud - CloudDataFusionRestartInstanceOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudDataFusionDeleteInstanceOperator" value="CloudDataFusionDeleteInstanceOperator(&#10;    location=LOCATION, instance_name=INSTANCE_NAME, task_id=&#39;delete_instance&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/datafusion.html#delete-datafusion-instance&#10;" description="Google Cloud - CloudDataFusionDeleteInstanceOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudDataFusionCreateInstanceOperator" value="CloudDataFusionCreateInstanceOperator(&#10;    location=LOCATION,&#10;    instance_name=INSTANCE_NAME,&#10;    instance=INSTANCE,&#10;    task_id=&#39;create_instance&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/datafusion.html#create-datafusion-instance&#10;" description="Google Cloud - CloudDataFusionCreateInstanceOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudDataFusionUpdateInstanceOperator" value="CloudDataFusionUpdateInstanceOperator(&#10;    location=LOCATION,&#10;    instance_name=INSTANCE_NAME,&#10;    instance=INSTANCE,&#10;    update_mask=&#39;instance.displayName&#39;,&#10;    task_id=&#39;update_instance&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/datafusion.html#update-datafusion-instance&#10;" description="Google Cloud - CloudDataFusionUpdateInstanceOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudDataFusionGetInstanceOperator" value="CloudDataFusionGetInstanceOperator(&#10;    location=LOCATION, instance_name=INSTANCE_NAME, task_id=&#39;get_instance&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/datafusion.html#get-datafusion-instance&#10;" description="Google Cloud - CloudDataFusionGetInstanceOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudDataFusionCreatePipelineOperator" value="CloudDataFusionCreatePipelineOperator(&#10;    location=LOCATION,&#10;    pipeline_name=PIPELINE_NAME,&#10;    pipeline=PIPELINE,&#10;    instance_name=INSTANCE_NAME,&#10;    task_id=&#39;create_pipeline&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/datafusion.html#create-a-datafusion-pipeline&#10;" description="Google Cloud - CloudDataFusionCreatePipelineOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudDataFusionStartPipelineOperator" value="CloudDataFusionStartPipelineOperator(&#10;    location=LOCATION,&#10;    pipeline_name=PIPELINE_NAME,&#10;    instance_name=INSTANCE_NAME,&#10;    task_id=&#39;start_pipeline&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/datafusion.html#start-a-datafusion-pipeline&#10;" description="Google Cloud - CloudDataFusionStartPipelineOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudDataFusionStopPipelineOperator" value="CloudDataFusionStopPipelineOperator(&#10;    location=LOCATION,&#10;    pipeline_name=PIPELINE_NAME,&#10;    instance_name=INSTANCE_NAME,&#10;    task_id=&#39;stop_pipeline&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/datafusion.html#stop-a-datafusion-pipeline&#10;" description="Google Cloud - CloudDataFusionStopPipelineOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudDataFusionDeletePipelineOperator" value="CloudDataFusionDeletePipelineOperator(&#10;    location=LOCATION,&#10;    pipeline_name=PIPELINE_NAME,&#10;    instance_name=INSTANCE_NAME,&#10;    task_id=&#39;delete_pipeline&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/datafusion.html#delete-a-datafusion-pipeline&#10;" description="Google Cloud - CloudDataFusionDeletePipelineOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudDataFusionListPipelinesOperator" value="CloudDataFusionListPipelinesOperator(&#10;    location=LOCATION, instance_name=INSTANCE_NAME, task_id=&#39;list_pipelines&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/datafusion.html#list-datafusion-pipelines&#10;" description="Google Cloud - CloudDataFusionListPipelinesOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="AutoMLCreateDatasetOperator" value="AutoMLCreateDatasetOperator(&#10;    task_id=&#39;create_dataset_task&#39;,&#10;    dataset=DATASET,&#10;    location=GCP_AUTOML_LOCATION,&#10;    project_id=GCP_PROJECT_ID&#10;)&#10;&#10;dataset_id = &#39;{{ task_instance.xcom_pull(&#39;create_dataset_task&#39;, key=&#39;dataset_id&#39;) }}&#39;&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/automl.html#creating-datasets&#10;" description="Google Cloud - AutoMLCreateDatasetOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="AutoMLImportDataOperator" value="AutoMLImportDataOperator(&#10;    task_id=&#39;import_dataset_task&#39;,&#10;    dataset_id=dataset_id,&#10;    location=GCP_AUTOML_LOCATION,&#10;    input_config=IMPORT_INPUT_CONFIG&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/automl.html#creating-datasets&#10;" description="Google Cloud - AutoMLImportDataOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="AutoMLTablesListTableSpecsOperator" value="AutoMLTablesListTableSpecsOperator(&#10;    task_id=&#39;list_tables_spec_task&#39;,&#10;    dataset_id=dataset_id,&#10;    location=GCP_AUTOML_LOCATION,&#10;    project_id=GCP_PROJECT_ID&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/automl.html#listing-table-and-columns-specs&#10;" description="Google Cloud - AutoMLTablesListTableSpecsOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="AutoMLTablesListColumnSpecsOperator" value="AutoMLTablesListColumnSpecsOperator(&#10;    task_id=&#39;list_columns_spec_task&#39;,&#10;    dataset_id=dataset_id,&#10;    table_spec_id=&#39;{{ extract_object_id(task_instance.xcom_pull(&#39;list_tables_spec_task&#39;)[0]) }}&#39;,&#10;    location=GCP_AUTOML_LOCATION,&#10;    project_id=GCP_PROJECT_ID&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/automl.html#listing-table-and-columns-specs&#10;" description="Google Cloud - AutoMLTablesListColumnSpecsOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="AutoMLTrainModelOperator" value="AutoMLTrainModelOperator(&#10;    task_id=&#39;create_model_task&#39;,&#10;    model=MODEL,&#10;    location=GCP_AUTOML_LOCATION,&#10;    project_id=GCP_PROJECT_ID&#10;)&#10;&#10;model_id = &#39;{{ task_instance.xcom_pull(&#39;create_model_task&#39;, key=&#39;model_id&#39;) }}&#39;&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/automl.html#operations-on-models&#10;" description="Google Cloud - AutoMLTrainModelOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="AutoMLGetModelOperator" value="AutoMLGetModelOperator(&#10;    task_id=&#39;get_model_task&#39;,&#10;    model_id=MODEL_ID,&#10;    location=GCP_AUTOML_LOCATION,&#10;    project_id=GCP_PROJECT_ID&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/automl.html#operations-on-models&#10;" description="Google Cloud - AutoMLGetModelOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="AutoMLDeployModelOperator" value="AutoMLDeployModelOperator(&#10;    task_id=&#39;deploy_model_task&#39;,&#10;    model_id=MODEL_ID,&#10;    location=GCP_AUTOML_LOCATION,&#10;    project_id=GCP_PROJECT_ID&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/automl.html#operations-on-models&#10;" description="Google Cloud - AutoMLDeployModelOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="AutoMLDeleteModelOperator" value="AutoMLDeleteModelOperator(&#10;    task_id=&#39;delete_model_task&#39;,&#10;    model_id=model_id,&#10;    location=GCP_AUTOML_LOCATION,&#10;    project_id=GCP_PROJECT_ID&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/automl.html#operations-on-models&#10;" description="Google Cloud - AutoMLDeleteModelOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="AutoMLPredictOperator" value="AutoMLPredictOperator(&#10;    task_id=&#39;predict_task&#39;,&#10;    model_id=MODEL_ID,&#10;    payload={},  # Add your own payload, the used model_id must be deployed&#10;    location=GCP_AUTOML_LOCATION,&#10;    project_id=GCP_PROJECT_ID&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/automl.html#making-predictions&#10;" description="Google Cloud - AutoMLPredictOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="AutoMLBatchPredictOperator" value="AutoMLBatchPredictOperator(&#10;    task_id=&#39;batch_predict_task&#39;,&#10;    model_id=MODEL_ID,&#10;    input_config={},  # Add your config&#10;    output_config={},  # Add your config&#10;    location=GCP_AUTOML_LOCATION,&#10;    project_id=GCP_PROJECT_ID&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/automl.html#making-predictions&#10;" description="Google Cloud - AutoMLBatchPredictOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="AutoMLListDatasetOperator" value="AutoMLListDatasetOperator(&#10;    task_id=&#39;list_datasets_task&#39;,&#10;    location=GCP_AUTOML_LOCATION,&#10;    project_id=GCP_PROJECT_ID&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/automl.html#listing-and-deleting-datasets&#10;" description="Google Cloud - AutoMLListDatasetOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="AutoMLDeleteDatasetOperator" value="AutoMLDeleteDatasetOperator(&#10;    task_id=&#39;delete_datasets_task&#39;,&#10;    dataset_id=&#39;{{ task_instance.xcom_pull(&#39;list_datasets_task&#39;, key=&#39;dataset_id_list&#39;) | list }}&#39;,&#10;    location=GCP_AUTOML_LOCATION,&#10;    project_id=GCP_PROJECT_ID&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/automl.html#listing-and-deleting-datasets&#10;" description="Google Cloud - AutoMLDeleteDatasetOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="BigQueryCreateDataTransferOperator" value="BigQueryCreateDataTransferOperator(&#10;    transfer_config=TRANSFER_CONFIG,&#10;    project_id=GCP_PROJECT_ID,&#10;    task_id=&#39;gcp_bigquery_create_transfer&#39;&#10;)&#10;&#10;transfer_config_id = (&#10;    &#39;{{ task_instance.xcom_pull(&#39;gcp_bigquery_create_transfer&#39;, key=&#39;transfer_config_id&#39;) }}&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/bigquery_dts.html#creating-transfer-configuration&#10;" description="Google Cloud - BigQueryCreateDataTransferOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="BigQueryDeleteDataTransferConfigOperator" value="BigQueryDeleteDataTransferConfigOperator(&#10;    transfer_config_id=transfer_config_id, task_id=&#39;gcp_bigquery_delete_transfer&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/bigquery_dts.html#deleting-transfer-configuration&#10;" description="Google Cloud - BigQueryDeleteDataTransferConfigOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="BigQueryDataTransferServiceStartTransferRunsOperator" value="BigQueryDataTransferServiceStartTransferRunsOperator(&#10;    task_id=&#39;gcp_bigquery_start_transfer&#39;,&#10;    transfer_config_id=transfer_config_id,&#10;    requested_run_time={&#39;seconds&#39;: int(time.time() + 60)}&#10;)run_id = &#39;{{ task_instance.xcom_pull(&#39;gcp_bigquery_start_transfer&#39;, key=&#39;run_id&#39;) }}&#39;&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/bigquery_dts.html#manually-starting-transfer-runs&#10;" description="Google Cloud - BigQueryDataTransferServiceStartTransferRunsOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="BigQueryDataTransferServiceTransferRunSensor" value="BigQueryDataTransferServiceTransferRunSensor(&#10;    task_id=&#39;gcp_run_sensor&#39;,&#10;    transfer_config_id=transfer_config_id,&#10;    run_id=run_id,&#10;    expected_statuses={&#39;SUCCEEDED&#39;}&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/bigquery_dts.html#manually-starting-transfer-runs&#10;" description="Google Cloud - BigQueryDataTransferServiceTransferRunSensor" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="BigtableCreateInstanceOperator" value="BigtableCreateInstanceOperator(&#10;    project_id=GCP_PROJECT_ID,&#10;    instance_id=CBT_INSTANCE_ID,&#10;    main_cluster_id=CBT_CLUSTER_ID,&#10;    main_cluster_zone=CBT_CLUSTER_ZONE,&#10;    instance_display_name=CBT_INSTANCE_DISPLAY_NAME,&#10;    instance_type=int(CBT_INSTANCE_TYPE),&#10;    instance_labels=json.loads(CBT_INSTANCE_LABELS),&#10;    cluster_nodes=None,&#10;    cluster_storage_type=int(CBT_CLUSTER_STORAGE_TYPE),&#10;    task_id=&#39;create_instance_task&#39;&#10;)create_instance_task2 = BigtableCreateInstanceOperator(&#10;    instance_id=CBT_INSTANCE_ID,&#10;    main_cluster_id=CBT_CLUSTER_ID,&#10;    main_cluster_zone=CBT_CLUSTER_ZONE,&#10;    instance_display_name=CBT_INSTANCE_DISPLAY_NAME,&#10;    instance_type=int(CBT_INSTANCE_TYPE),&#10;    instance_labels=json.loads(CBT_INSTANCE_LABELS),&#10;    cluster_nodes=int(CBT_CLUSTER_NODES),&#10;    cluster_storage_type=int(CBT_CLUSTER_STORAGE_TYPE),&#10;    task_id=&#39;create_instance_task2&#39;&#10;)create_instance_task &gt;&gt; create_instance_task2&#39;&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/bigtable.html#using-the-operator&#10;" description="Google Cloud - BigtableCreateInstanceOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="BigtableUpdateInstanceOperator" value="BigtableUpdateInstanceOperator(&#10;    instance_id=CBT_INSTANCE_ID,&#10;    instance_display_name=CBT_INSTANCE_DISPLAY_NAME_UPDATED,&#10;    instance_type=int(CBT_INSTANCE_TYPE_PROD),&#10;    instance_labels=json.loads(CBT_INSTANCE_LABELS_UPDATED),&#10;    task_id=&#39;update_instance_task&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/bigtable.html#id1&#10;" description="Google Cloud - BigtableUpdateInstanceOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="BigtableDeleteInstanceOperator" value="BigtableDeleteInstanceOperator(&#10;    project_id=GCP_PROJECT_ID,&#10;    instance_id=CBT_INSTANCE_ID,&#10;    task_id=&#39;delete_instance_task&#39;&#10;)delete_instance_task2 = BigtableDeleteInstanceOperator(&#10;    instance_id=CBT_INSTANCE_ID,&#10;    task_id=&#39;delete_instance_task2&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/bigtable.html#id2&#10;" description="Google Cloud - BigtableDeleteInstanceOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="BigtableUpdateClusterOperator" value="BigtableUpdateClusterOperator(&#10;    project_id=GCP_PROJECT_ID,&#10;    instance_id=CBT_INSTANCE_ID,&#10;    cluster_id=CBT_CLUSTER_ID,&#10;    nodes=int(CBT_CLUSTER_NODES_UPDATED),&#10;    task_id=&#39;update_cluster_task&#39;&#10;)cluster_update_task2 = BigtableUpdateClusterOperator(&#10;    instance_id=CBT_INSTANCE_ID,&#10;    cluster_id=CBT_CLUSTER_ID,&#10;    nodes=int(CBT_CLUSTER_NODES_UPDATED),&#10;    task_id=&#39;update_cluster_task2&#39;&#10;)cluster_update_task &gt;&gt; cluster_update_task2&#39;&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/bigtable.html#id3&#10;" description="Google Cloud - BigtableUpdateClusterOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="BigtableCreateTableOperator" value="BigtableCreateTableOperator(&#10;    project_id=GCP_PROJECT_ID,&#10;    instance_id=CBT_INSTANCE_ID,&#10;    table_id=CBT_TABLE_ID,&#10;    task_id=&#39;create_table&#39;&#10;)create_table_task2 = BigtableCreateTableOperator(&#10;    instance_id=CBT_INSTANCE_ID,&#10;    table_id=CBT_TABLE_ID,&#10;    task_id=&#39;create_table_task2&#39;&#10;)create_table_task &gt;&gt; create_table_task2&#39;&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/bigtable.html#id4&#10;" description="Google Cloud - BigtableCreateTableOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="BigtableDeleteTableOperator" value="BigtableDeleteTableOperator(&#10;    project_id=GCP_PROJECT_ID,&#10;    instance_id=CBT_INSTANCE_ID,&#10;    table_id=CBT_TABLE_ID,&#10;    task_id=&#39;delete_table_task&#39;&#10;)delete_table_task2 = BigtableDeleteTableOperator(&#10;    instance_id=CBT_INSTANCE_ID,&#10;    table_id=CBT_TABLE_ID,&#10;    task_id=&#39;delete_table_task2&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/bigtable.html#id5&#10;" description="Google Cloud - BigtableDeleteTableOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="BigtableTableReplicationCompletedSensor" value="BigtableTableReplicationCompletedSensor(&#10;    project_id=GCP_PROJECT_ID,&#10;    instance_id=CBT_INSTANCE_ID,&#10;    table_id=CBT_TABLE_ID,&#10;    poke_interval=int(CBT_POKE_INTERVAL),&#10;    timeout=180,&#10;    task_id=&#39;wait_for_table_replication_task&#39;&#10;)wait_for_table_replication_task2 = BigtableTableReplicationCompletedSensor(&#10;    instance_id=CBT_INSTANCE_ID,&#10;    table_id=CBT_TABLE_ID,&#10;    poke_interval=int(CBT_POKE_INTERVAL),&#10;    timeout=180,&#10;    task_id=&#39;wait_for_table_replication_task2&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/bigtable.html#id6&#10;" description="Google Cloud - BigtableTableReplicationCompletedSensor" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudBuildCreateBuildOperator" value="CloudBuildCreateBuildOperator(&#10;        task_id=&#39;create_build_from_file&#39;,&#10;        project_id=GCP_PROJECT_ID,&#10;        body=str(CURRENT_FOLDER.joinpath(&#39;example_cloud_build.yaml&#39;)),&#10;        params={&#39;name&#39;: &#39;Airflow&#39;},&#10;    )&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/cloud_build.html#build-configuration-overview&#10;" description="Google Cloud - CloudBuildCreateBuildOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="GCSBucketCreateAclEntryOperator" value="GCSBucketCreateAclEntryOperator(&#10;    task_id=&#39;gcs-set-acl-permission&#39;,&#10;    bucket=BUCKET_NAME,&#10;    entity=&#39;user-{{ task_instance.xcom_pull(&#39;get-instance&#39;)[&#39;persistence_iam_identity&#39;]&#39;&#10;    &#39;.split(&#39;:&#39;, 2)[1] }}&#39;,&#10;    role=&#39;OWNER&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/cloud_memorystore.html#configuration-of-bucket-permissions-for-import-export&#10;" description="Google Cloud - GCSBucketCreateAclEntryOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudMemorystoreCreateInstanceOperator" value="CloudMemorystoreCreateInstanceOperator(&#10;    task_id=&#39;create-instance&#39;,&#10;    location=&#39;europe-north1&#39;,&#10;    instance_id=MEMORYSTORE_REDIS_INSTANCE_NAME,&#10;    instance=FIRST_INSTANCE,&#10;    project_id=GCP_PROJECT_ID&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/cloud_memorystore.html#create-instance&#10;" description="Google Cloud - CloudMemorystoreCreateInstanceOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudMemorystoreDeleteInstanceOperator" value="CloudMemorystoreDeleteInstanceOperator(&#10;    task_id=&#39;delete-instance&#39;,&#10;    location=&#39;europe-north1&#39;,&#10;    instance=MEMORYSTORE_REDIS_INSTANCE_NAME,&#10;    project_id=GCP_PROJECT_ID&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/cloud_memorystore.html#delete-instance&#10;" description="Google Cloud - CloudMemorystoreDeleteInstanceOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudMemorystoreExportInstanceOperator" value="CloudMemorystoreExportInstanceOperator(&#10;    task_id=&#39;export-instance&#39;,&#10;    location=&#39;europe-north1&#39;,&#10;    instance=MEMORYSTORE_REDIS_INSTANCE_NAME,&#10;    output_config={&#39;gcs_destination&#39;: {&#39;uri&#39;: EXPORT_GCS_URL}},&#10;    project_id=GCP_PROJECT_ID&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/cloud_memorystore.html#export-instance&#10;" description="Google Cloud - CloudMemorystoreExportInstanceOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudMemorystoreFailoverInstanceOperator" value="CloudMemorystoreFailoverInstanceOperator(&#10;    task_id=&#39;failover-instance&#39;,&#10;    location=&#39;europe-north1&#39;,&#10;    instance=MEMORYSTORE_REDIS_INSTANCE_NAME_2,&#10;    data_protection_mode=FailoverInstanceRequest.DataProtectionMode.LIMITED_DATA_LOSS,&#10;    project_id=GCP_PROJECT_ID&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/cloud_memorystore.html#failover-instance&#10;" description="Google Cloud - CloudMemorystoreFailoverInstanceOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudMemorystoreGetInstanceOperator" value="CloudMemorystoreGetInstanceOperator(&#10;    task_id=&#39;get-instance&#39;,&#10;    location=&#39;europe-north1&#39;,&#10;    instance=MEMORYSTORE_REDIS_INSTANCE_NAME,&#10;    project_id=GCP_PROJECT_ID,&#10;    do_xcom_push=True&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/cloud_memorystore.html#get-instance&#10;" description="Google Cloud - CloudMemorystoreGetInstanceOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudMemorystoreImportOperator" value="CloudMemorystoreImportOperator(&#10;    task_id=&#39;import-instance&#39;,&#10;    location=&#39;europe-north1&#39;,&#10;    instance=MEMORYSTORE_REDIS_INSTANCE_NAME_2,&#10;    input_config={&#39;gcs_source&#39;: {&#39;uri&#39;: EXPORT_GCS_URL}},&#10;    project_id=GCP_PROJECT_ID&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/cloud_memorystore.html#import-instance&#10;" description="Google Cloud - CloudMemorystoreImportOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudMemorystoreListInstancesOperator" value="CloudMemorystoreListInstancesOperator(&#10;    task_id=&#39;list-instances&#39;, location=&#39;-&#39;, page_size=100, project_id=GCP_PROJECT_ID&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/cloud_memorystore.html#list-instances&#10;" description="Google Cloud - CloudMemorystoreListInstancesOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudMemorystoreUpdateInstanceOperator" value="CloudMemorystoreUpdateInstanceOperator(&#10;    task_id=&#39;update-instance&#39;,&#10;    location=&#39;europe-north1&#39;,&#10;    instance_id=MEMORYSTORE_REDIS_INSTANCE_NAME,&#10;    project_id=GCP_PROJECT_ID,&#10;    update_mask={&#39;paths&#39;: [&#39;memory_size_gb&#39;]},&#10;    instance={&#39;memory_size_gb&#39;: 2}&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/cloud_memorystore.html#update-instance&#10;" description="Google Cloud - CloudMemorystoreUpdateInstanceOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudMemorystoreScaleInstanceOperator" value="CloudMemorystoreScaleInstanceOperator(&#10;    task_id=&#39;scale-instance&#39;,&#10;    location=&#39;europe-north1&#39;,&#10;    instance_id=MEMORYSTORE_REDIS_INSTANCE_NAME_3,&#10;    project_id=GCP_PROJECT_ID,&#10;    memory_size_gb=3&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/cloud_memorystore.html#scale-instance&#10;" description="Google Cloud - CloudMemorystoreScaleInstanceOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudMemorystoreMemcachedCreateInstanceOperator" value="CloudMemorystoreMemcachedCreateInstanceOperator(&#10;    task_id=&#39;create-instance&#39;,&#10;    location=&#39;europe-north1&#39;,&#10;    instance_id=MEMORYSTORE_MEMCACHED_INSTANCE_NAME,&#10;    instance=MEMCACHED_INSTANCE,&#10;    project_id=GCP_PROJECT_ID&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/cloud_memorystore_memcached.html#create-instance&#10;" description="Google Cloud - CloudMemorystoreMemcachedCreateInstanceOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudMemorystoreMemcachedDeleteInstanceOperator" value="CloudMemorystoreMemcachedDeleteInstanceOperator(&#10;    task_id=&#39;delete-instance&#39;,&#10;    location=&#39;europe-north1&#39;,&#10;    instance=MEMORYSTORE_MEMCACHED_INSTANCE_NAME,&#10;    project_id=GCP_PROJECT_ID&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/cloud_memorystore_memcached.html#delete-instance&#10;" description="Google Cloud - CloudMemorystoreMemcachedDeleteInstanceOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudMemorystoreMemcachedGetInstanceOperator" value="CloudMemorystoreMemcachedGetInstanceOperator(&#10;    task_id=&#39;get-instance&#39;,&#10;    location=&#39;europe-north1&#39;,&#10;    instance=MEMORYSTORE_MEMCACHED_INSTANCE_NAME,&#10;    project_id=GCP_PROJECT_ID&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/cloud_memorystore_memcached.html#get-instance&#10;" description="Google Cloud - CloudMemorystoreMemcachedGetInstanceOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudMemorystoreMemcachedListInstancesOperator" value="CloudMemorystoreMemcachedListInstancesOperator(&#10;    task_id=&#39;list-instances&#39;, location=&#39;-&#39;, project_id=GCP_PROJECT_ID&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/cloud_memorystore_memcached.html#list-instances&#10;" description="Google Cloud - CloudMemorystoreMemcachedListInstancesOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudMemorystoreMemcachedUpdateInstanceOperator" value="CloudMemorystoreMemcachedUpdateInstanceOperator(&#10;    task_id=&#39;update-instance&#39;,&#10;    location=&#39;europe-north1&#39;,&#10;    instance_id=MEMORYSTORE_MEMCACHED_INSTANCE_NAME,&#10;    project_id=GCP_PROJECT_ID,&#10;    update_mask=cloud_memcache.field_mask.FieldMask(paths=[&#39;node_count&#39;]),&#10;    instance={&#39;node_count&#39;: 2}&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/cloud_memorystore_memcached.html#update-instance&#10;" description="Google Cloud - CloudMemorystoreMemcachedUpdateInstanceOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudMemorystoreMemcachedUpdateParametersOperator" value="CloudMemorystoreMemcachedUpdateParametersOperator(&#10;    task_id=&#39;update-parameters&#39;,&#10;    location=&#39;europe-north1&#39;,&#10;    instance_id=MEMORYSTORE_MEMCACHED_INSTANCE_NAME,&#10;    project_id=GCP_PROJECT_ID,&#10;    update_mask={&#39;paths&#39;: [&#39;params&#39;]},&#10;    parameters={&#39;params&#39;: {&#39;protocol&#39;: &#39;ascii&#39;, &#39;hash_algorithm&#39;: &#39;jenkins&#39;}}&#10;)&#10;&#10;apply_memcached_parameters = CloudMemorystoreMemcachedApplyParametersOperator(&#10;    task_id=&#39;apply-parameters&#39;,&#10;    location=&#39;europe-north1&#39;,&#10;    instance_id=MEMORYSTORE_MEMCACHED_INSTANCE_NAME,&#10;    project_id=GCP_PROJECT_ID,&#10;    node_ids=[&#39;node-a-1&#39;],&#10;    apply_all=False&#10;)&#10;&#10;# update_parameters &gt;&gt; apply_parameters&#39;&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/cloud_memorystore_memcached.html#update-and-apply-parameters-to-an-instance&#10;" description="Google Cloud - CloudMemorystoreMemcachedUpdateParametersOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudSQLCreateInstanceDatabaseOperator" value="CloudSQLCreateInstanceDatabaseOperator(&#10;    project_id=GCP_PROJECT_ID, body=db_create_body, instance=INSTANCE_NAME, task_id=&#39;sql_db_create_task&#39;&#10;)sql_db_create_task2 = CloudSQLCreateInstanceDatabaseOperator(&#10;    body=db_create_body, instance=INSTANCE_NAME, task_id=&#39;sql_db_create_task2&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/cloud_sql.html#using-the-operator&#10;" description="Google Cloud - CloudSQLCreateInstanceDatabaseOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudSQLDeleteInstanceDatabaseOperator" value="CloudSQLDeleteInstanceDatabaseOperator(&#10;    project_id=GCP_PROJECT_ID, instance=INSTANCE_NAME, database=DB_NAME, task_id=&#39;sql_db_delete_task&#39;&#10;)sql_db_delete_task2 = CloudSQLDeleteInstanceDatabaseOperator(&#10;    instance=INSTANCE_NAME, database=DB_NAME, task_id=&#39;sql_db_delete_task2&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/cloud_sql.html#id1&#10;" description="Google Cloud - CloudSQLDeleteInstanceDatabaseOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudSQLPatchInstanceDatabaseOperator" value="CloudSQLPatchInstanceDatabaseOperator(&#10;    project_id=GCP_PROJECT_ID,&#10;    body=db_patch_body,&#10;    instance=INSTANCE_NAME,&#10;    database=DB_NAME,&#10;    task_id=&#39;sql_db_patch_task&#39;&#10;)sql_db_patch_task2 = CloudSQLPatchInstanceDatabaseOperator(&#10;    body=db_patch_body, instance=INSTANCE_NAME, database=DB_NAME, task_id=&#39;sql_db_patch_task2&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/cloud_sql.html#id4&#10;" description="Google Cloud - CloudSQLPatchInstanceDatabaseOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudSQLDeleteInstanceOperator" value="CloudSQLDeleteInstanceOperator(&#10;    project_id=GCP_PROJECT_ID, instance=INSTANCE_NAME, task_id=&#39;sql_instance_delete_task&#39;&#10;)sql_instance_delete_task2 = CloudSQLDeleteInstanceOperator(&#10;    instance=INSTANCE_NAME2, task_id=&#39;sql_instance_delete_task2&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/cloud_sql.html#id7&#10;" description="Google Cloud - CloudSQLDeleteInstanceOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudSQLExportInstanceOperator" value="CloudSQLExportInstanceOperator(&#10;    project_id=GCP_PROJECT_ID, body=export_body, instance=INSTANCE_NAME, task_id=&#39;sql_export_task&#39;&#10;)sql_export_task2 = CloudSQLExportInstanceOperator(&#10;    body=export_body, instance=INSTANCE_NAME, task_id=&#39;sql_export_task2&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/cloud_sql.html#id10&#10;" description="Google Cloud - CloudSQLExportInstanceOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudSQLImportInstanceOperator" value="CloudSQLImportInstanceOperator(&#10;    project_id=GCP_PROJECT_ID, body=import_body, instance=INSTANCE_NAME2, task_id=&#39;sql_import_task&#39;&#10;)sql_import_task2 = CloudSQLImportInstanceOperator(&#10;    body=import_body, instance=INSTANCE_NAME2, task_id=&#39;sql_import_task2&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/cloud_sql.html#id14&#10;" description="Google Cloud - CloudSQLImportInstanceOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="GCSObjectCreateAclEntryOperator" value="GCSObjectCreateAclEntryOperator(&#10;    entity=&#39;user-{{ task_instance.xcom_pull(&#39;&#10;    &#39;sql_instance_create_task2&#39;, key=&#39;service_account_email&#39;)&#10;    &#39; }}&#39;,&#10;    role=&#39;READER&#39;,&#10;    bucket=import_url_split[1],  # netloc (bucket)&#10;    object_name=import_url_split[2][1:],  # path (strip first &#39;/&#39;)&#10;    task_id=&#39;sql_gcp_add_object_permission_task&#39;&#10;)&#10;&#10;# For import to work we also need to add the Cloud SQL instance&#39;s Service Account&#39;# write access to the whole bucket!.&#39;sql_gcp_add_bucket_permission_2_task = GCSBucketCreateAclEntryOperator(&#10;    entity=&#39;user-{{ task_instance.xcom_pull(&#39;&#10;    &#39;sql_instance_create_task2&#39;, key=&#39;service_account_email&#39;) &#39;&#10;    &#39;}}&#39;,&#10;    role=&#39;WRITER&#39;,&#10;    bucket=import_url_split[1],  # netloc&#10;    task_id=&#39;sql_gcp_add_bucket_permission_2_task&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/cloud_sql.html#id17&#10;" description="Google Cloud - GCSObjectCreateAclEntryOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudSQLCreateInstanceOperator" value="CloudSQLCreateInstanceOperator(&#10;    project_id=GCP_PROJECT_ID, body=body, instance=INSTANCE_NAME, task_id=&#39;sql_instance_create_task&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/cloud_sql.html#id19&#10;" description="Google Cloud - CloudSQLCreateInstanceOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudSQLInstancePatchOperator" value="CloudSQLInstancePatchOperator(&#10;    project_id=GCP_PROJECT_ID, body=patch_body, instance=INSTANCE_NAME, task_id=&#39;sql_instance_patch_task&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/cloud_sql.html#id23&#10;" description="Google Cloud - CloudSQLInstancePatchOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudDataTransferServiceCreateJobOperator" value="CloudDataTransferServiceCreateJobOperator(&#10;    task_id=&#39;create_transfer_job_from_aws&#39;, body=aws_to_gcs_transfer_body&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/cloud_storage_transfer_service.html#using-the-operator&#10;" description="Google Cloud - CloudDataTransferServiceCreateJobOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudDataTransferServiceDeleteJobOperator" value="CloudDataTransferServiceDeleteJobOperator(&#10;    task_id=&#39;delete_transfer_from_aws_job&#39;,&#10;    job_name=&#39;{{task_instance.xcom_pull(&#39;create_transfer_job_from_aws&#39;)[&#39;name&#39;]}}&#39;,&#10;    project_id=GCP_PROJECT_ID&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/cloud_storage_transfer_service.html#id2&#10;" description="Google Cloud - CloudDataTransferServiceDeleteJobOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudDataTransferServiceUpdateJobOperator" value="CloudDataTransferServiceUpdateJobOperator(&#10;    task_id=&#39;update_transfer&#39;,&#10;    job_name=&#39;{{task_instance.xcom_pull(&#39;create_transfer&#39;)[&#39;name&#39;]}}&#39;,&#10;    body=update_body&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/cloud_storage_transfer_service.html#id5&#10;" description="Google Cloud - CloudDataTransferServiceUpdateJobOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudDataTransferServiceCancelOperationOperator" value="CloudDataTransferServiceCancelOperationOperator(&#10;    task_id=&#39;cancel_operation&#39;,&#10;    operation_name=&#39;{{task_instance.xcom_pull(&#39;&#10;    &#39;wait_for_second_operation_to_start&#39;, key=&#39;sensed_operations&#39;)[0][&#39;name&#39;]}}&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/cloud_storage_transfer_service.html#id8&#10;" description="Google Cloud - CloudDataTransferServiceCancelOperationOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudDataTransferServiceGetOperationOperator" value="CloudDataTransferServiceGetOperationOperator(&#10;    task_id=&#39;get_operation&#39;, operation_name=&#39;{{task_instance.xcom_pull(&#39;list_operations&#39;)[0][&#39;name&#39;]}}&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/cloud_storage_transfer_service.html#id11&#10;" description="Google Cloud - CloudDataTransferServiceGetOperationOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudDataTransferServiceListOperationsOperator" value="CloudDataTransferServiceListOperationsOperator(&#10;    task_id=&#39;list_operations&#39;,&#10;    request_filter={&#10;        FILTER_PROJECT_ID: GCP_PROJECT_ID,&#10;        FILTER_JOB_NAMES: [&#39;{{task_instance.xcom_pull(&#39;create_transfer_job_from_aws&#39;)[&#39;name&#39;]}}&#39;],&#10;    }&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/cloud_storage_transfer_service.html#id14&#10;" description="Google Cloud - CloudDataTransferServiceListOperationsOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudDataTransferServicePauseOperationOperator" value="CloudDataTransferServicePauseOperationOperator(&#10;    task_id=&#39;pause_operation&#39;,&#10;    operation_name=&#39;{{task_instance.xcom_pull(&#39;wait_for_operation_to_start&#39;, &#39;&#10;    &#39;key=&#39;sensed_operations&#39;)[0][&#39;name&#39;]}}&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/cloud_storage_transfer_service.html#id17&#10;" description="Google Cloud - CloudDataTransferServicePauseOperationOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudDataTransferServiceResumeOperationOperator" value="CloudDataTransferServiceResumeOperationOperator(&#10;    task_id=&#39;resume_operation&#39;, operation_name=&#39;{{task_instance.xcom_pull(&#39;get_operation&#39;)[&#39;name&#39;]}}&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/cloud_storage_transfer_service.html#id20&#10;" description="Google Cloud - CloudDataTransferServiceResumeOperationOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudDataTransferServiceJobStatusSensor" value="CloudDataTransferServiceJobStatusSensor(&#10;    task_id=&#39;wait_for_operation_to_end&#39;,&#10;    job_name=&#39;{{task_instance.xcom_pull(&#39;create_transfer_job_from_aws&#39;)[&#39;name&#39;]}}&#39;,&#10;    project_id=GCP_PROJECT_ID,&#10;    expected_statuses={GcpTransferOperationStatus.SUCCESS},&#10;    poke_interval=WAIT_FOR_OPERATION_POKE_INTERVAL&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/cloud_storage_transfer_service.html#id23&#10;" description="Google Cloud - CloudDataTransferServiceJobStatusSensor" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="ComputeEngineStartInstanceOperator" value="ComputeEngineStartInstanceOperator(&#10;    project_id=GCP_PROJECT_ID, zone=GCE_ZONE, resource_id=GCE_INSTANCE, task_id=&#39;gcp_compute_start_task&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/compute.html#using-the-operator&#10;" description="Google Cloud - ComputeEngineStartInstanceOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="ComputeEngineStopInstanceOperator" value="ComputeEngineStopInstanceOperator(&#10;    project_id=GCP_PROJECT_ID, zone=GCE_ZONE, resource_id=GCE_INSTANCE, task_id=&#39;gcp_compute_stop_task&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/compute.html#id1&#10;" description="Google Cloud - ComputeEngineStopInstanceOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="ComputeEngineSetMachineTypeOperator" value="ComputeEngineSetMachineTypeOperator(&#10;    project_id=GCP_PROJECT_ID,&#10;    zone=GCE_ZONE,&#10;    resource_id=GCE_INSTANCE,&#10;    body={&#39;machineType&#39;: f&#39;zones/{GCE_ZONE}/machineTypes/{GCE_SHORT_MACHINE_TYPE_NAME}&#39;},&#10;    task_id=&#39;gcp_compute_set_machine_type&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/compute.html#id4&#10;" description="Google Cloud - ComputeEngineSetMachineTypeOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="ComputeEngineCopyInstanceTemplateOperator" value="ComputeEngineCopyInstanceTemplateOperator(&#10;    project_id=GCP_PROJECT_ID,&#10;    resource_id=GCE_TEMPLATE_NAME,&#10;    body_patch=GCE_INSTANCE_TEMPLATE_BODY_UPDATE,&#10;    task_id=&#39;gcp_compute_igm_copy_template_task&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/compute.html#id7&#10;" description="Google Cloud - ComputeEngineCopyInstanceTemplateOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="ComputeEngineInstanceGroupUpdateManagerTemplateOperator" value="ComputeEngineInstanceGroupUpdateManagerTemplateOperator(&#10;    project_id=GCP_PROJECT_ID,&#10;    resource_id=GCE_INSTANCE_GROUP_MANAGER_NAME,&#10;    zone=GCE_ZONE,&#10;    source_template=SOURCE_TEMPLATE_URL,&#10;    destination_template=DESTINATION_TEMPLATE_URL,&#10;    update_policy=UPDATE_POLICY,&#10;    task_id=&#39;gcp_compute_igm_group_manager_update_template&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/compute.html#id11&#10;" description="Google Cloud - ComputeEngineInstanceGroupUpdateManagerTemplateOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="SSHOperator" value="SSHOperator(&#10;    task_id=&#39;os_login_without_iap_tunnel&#39;,&#10;    ssh_hook=ComputeEngineSSHHook(&#10;        instance_name=GCE_INSTANCE,&#10;        zone=GCE_ZONE,&#10;        project_id=GCP_PROJECT_ID,&#10;        use_oslogin=True,&#10;        use_iap_tunnel=False,&#10;    ),&#10;    command=&#39;echo os_login_without_iap_tunnel&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/compute_ssh.html#computeengineremoteinstancesshoperator&#10;" description="Google Cloud - SSHOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudDLPCreateStoredInfoTypeOperator" value="CloudDLPCreateStoredInfoTypeOperator(&#10;    project_id=GCP_PROJECT,&#10;    config=CUSTOM_INFO_TYPES,&#10;    stored_info_type_id=CUSTOM_INFO_TYPE_ID,&#10;    task_id=&#39;create_info_type&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/data_loss_prevention.html#create-stored-info-type&#10;" description="Google Cloud - CloudDLPCreateStoredInfoTypeOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudDLPUpdateStoredInfoTypeOperator" value="CloudDLPUpdateStoredInfoTypeOperator(&#10;    project_id=GCP_PROJECT,&#10;    stored_info_type_id=CUSTOM_INFO_TYPE_ID,&#10;    config=UPDATE_CUSTOM_INFO_TYPE,&#10;    task_id=&#39;update_info_type&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/data_loss_prevention.html#update-stored-info-type&#10;" description="Google Cloud - CloudDLPUpdateStoredInfoTypeOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudDLPDeleteStoredInfoTypeOperator" value="CloudDLPDeleteStoredInfoTypeOperator(&#10;    project_id=GCP_PROJECT,&#10;    stored_info_type_id=CUSTOM_INFO_TYPE_ID,&#10;    task_id=&#39;delete_info_type&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/data_loss_prevention.html#deleting-stored-info-type&#10;" description="Google Cloud - CloudDLPDeleteStoredInfoTypeOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudDLPCreateInspectTemplateOperator" value="CloudDLPCreateInspectTemplateOperator(&#10;    project_id=GCP_PROJECT,&#10;    inspect_template=INSPECT_TEMPLATE,&#10;    template_id=TEMPLATE_ID,&#10;    task_id=&#39;create_template&#39;,&#10;    do_xcom_push=True&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/data_loss_prevention.html#creating-template&#10;" description="Google Cloud - CloudDLPCreateInspectTemplateOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudDLPInspectContentOperator" value="CloudDLPInspectContentOperator(&#10;    task_id=&#39;inspect_content&#39;,&#10;    project_id=GCP_PROJECT,&#10;    item=ITEM,&#10;    inspect_template_name=&#39;{{ task_instance.xcom_pull(&#39;create_template&#39;, key=&#39;return_value&#39;)[&#39;name&#39;] }}&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/data_loss_prevention.html#using-template&#10;" description="Google Cloud - CloudDLPInspectContentOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudDLPDeleteInspectTemplateOperator" value="CloudDLPDeleteInspectTemplateOperator(&#10;    task_id=&#39;delete_template&#39;,&#10;    template_id=TEMPLATE_ID,&#10;    project_id=GCP_PROJECT&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/data_loss_prevention.html#deleting-template&#10;" description="Google Cloud - CloudDLPDeleteInspectTemplateOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudDLPCreateJobTriggerOperator" value="CloudDLPCreateJobTriggerOperator(&#10;    project_id=GCP_PROJECT,&#10;    job_trigger=JOB_TRIGGER,&#10;    trigger_id=TRIGGER_ID,&#10;    task_id=&#39;create_trigger&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/data_loss_prevention.html#creating-job-trigger&#10;" description="Google Cloud - CloudDLPCreateJobTriggerOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudDLPUpdateJobTriggerOperator" value="CloudDLPUpdateJobTriggerOperator(&#10;    project_id=GCP_PROJECT,&#10;    job_trigger_id=TRIGGER_ID,&#10;    job_trigger=JOB_TRIGGER,&#10;    task_id=&#39;update_info_type&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/data_loss_prevention.html#updating-job-trigger&#10;" description="Google Cloud - CloudDLPUpdateJobTriggerOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudDLPDeleteJobTriggerOperator" value="CloudDLPDeleteJobTriggerOperator(&#10;    project_id=GCP_PROJECT, job_trigger_id=TRIGGER_ID, task_id=&#39;delete_info_type&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/data_loss_prevention.html#deleting-job-trigger&#10;" description="Google Cloud - CloudDLPDeleteJobTriggerOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudDLPDeidentifyContentOperator" value="CloudDLPDeidentifyContentOperator(&#10;    project_id=GCP_PROJECT,&#10;    item=ITEM,&#10;    deidentify_config=DEIDENTIFY_CONFIG,&#10;    inspect_config=INSPECT_CONFIG,&#10;    task_id=&#39;deidentify_content&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/data_loss_prevention.html#de-identify-content&#10;" description="Google Cloud - CloudDLPDeidentifyContentOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudDataCatalogGetEntryOperator" value="CloudDataCatalogGetEntryOperator(&#10;    task_id=&#39;get_entry&#39;, location=LOCATION, entry_group=ENTRY_GROUP_ID, entry=ENTRY_ID&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/datacatalog.html#getting-an-entry&#10;" description="Google Cloud - CloudDataCatalogGetEntryOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudDataCatalogCreateEntryOperator" value="CloudDataCatalogCreateEntryOperator(&#10;    task_id=&#39;create_entry_gcs&#39;,&#10;    location=LOCATION,&#10;    entry_group=ENTRY_GROUP_ID,&#10;    entry_id=ENTRY_ID,&#10;    entry={&#10;        &#39;display_name&#39;: &#39;Wizard&#39;,&#10;        &#39;type_&#39;: &#39;FILESET&#39;,&#10;        &#39;gcs_fileset_spec&#39;: {&#39;file_patterns&#39;: [&#39;gs://test-datacatalog/**&#39;]},&#10;    }&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/datacatalog.html#creating-an-entry&#10;" description="Google Cloud - CloudDataCatalogCreateEntryOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudDataCatalogUpdateEntryOperator" value="CloudDataCatalogUpdateEntryOperator(&#10;    task_id=&#39;update_entry&#39;,&#10;    entry={&#39;display_name&#39;: &#39;New Wizard&#39;},&#10;    update_mask={&#39;paths&#39;: [&#39;display_name&#39;]},&#10;    location=LOCATION,&#10;    entry_group=ENTRY_GROUP_ID,&#10;    entry_id=ENTRY_ID&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/datacatalog.html#updating-an-entry&#10;" description="Google Cloud - CloudDataCatalogUpdateEntryOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudDataCatalogDeleteEntryOperator" value="CloudDataCatalogDeleteEntryOperator(&#10;    task_id=&#39;delete_entry&#39;, location=LOCATION, entry_group=ENTRY_GROUP_ID, entry=ENTRY_ID&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/datacatalog.html#deleting-a-entry&#10;" description="Google Cloud - CloudDataCatalogDeleteEntryOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudDataCatalogCreateEntryGroupOperator" value="CloudDataCatalogCreateEntryGroupOperator(&#10;    task_id=&#39;create_entry_group&#39;,&#10;    location=LOCATION,&#10;    entry_group_id=ENTRY_GROUP_ID,&#10;    entry_group={&#39;display_name&#39;: &#39;analytics data - jan 2011&#39;}&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/datacatalog.html#creating-an-entry-group&#10;" description="Google Cloud - CloudDataCatalogCreateEntryGroupOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudDataCatalogGetEntryGroupOperator" value="CloudDataCatalogGetEntryGroupOperator(&#10;    task_id=&#39;get_entry_group&#39;,&#10;    location=LOCATION,&#10;    entry_group=ENTRY_GROUP_ID,&#10;    read_mask={&#39;paths&#39;: [&#39;name&#39;, &#39;display_name&#39;]}&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/datacatalog.html#getting-an-entry-group&#10;" description="Google Cloud - CloudDataCatalogGetEntryGroupOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudDataCatalogDeleteEntryGroupOperator" value="CloudDataCatalogDeleteEntryGroupOperator(&#10;    task_id=&#39;delete_entry_group&#39;, location=LOCATION, entry_group=ENTRY_GROUP_ID&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/datacatalog.html#deleting-an-entry-group&#10;" description="Google Cloud - CloudDataCatalogDeleteEntryGroupOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudDataCatalogCreateTagTemplateOperator" value="CloudDataCatalogCreateTagTemplateOperator(&#10;    task_id=&#39;create_tag_template&#39;,&#10;    location=LOCATION,&#10;    tag_template_id=TEMPLATE_ID,&#10;    tag_template={&#10;        &#39;display_name&#39;: &#39;Awesome Tag Template&#39;,&#10;        &#39;fields&#39;: {&#10;            FIELD_NAME_1: TagTemplateField(&#10;                display_name=&#39;first-field&#39;, type_=dict(primitive_type=&#39;STRING&#39;)&#10;            )&#10;        },&#10;    }&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/datacatalog.html#creating-a-tag-templates&#10;" description="Google Cloud - CloudDataCatalogCreateTagTemplateOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudDataCatalogDeleteTagTemplateOperator" value="CloudDataCatalogDeleteTagTemplateOperator(&#10;    task_id=&#39;delete_tag_template&#39;, location=LOCATION, tag_template=TEMPLATE_ID, force=True&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/datacatalog.html#deleting-a-tag-template&#10;" description="Google Cloud - CloudDataCatalogDeleteTagTemplateOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudDataCatalogGetTagTemplateOperator" value="CloudDataCatalogGetTagTemplateOperator(&#10;    task_id=&#39;get_tag_template&#39;, location=LOCATION, tag_template=TEMPLATE_ID&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/datacatalog.html#getting-a-tag-template&#10;" description="Google Cloud - CloudDataCatalogGetTagTemplateOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudDataCatalogUpdateTagTemplateOperator" value="CloudDataCatalogUpdateTagTemplateOperator(&#10;    task_id=&#39;update_tag_template&#39;,&#10;    tag_template={&#39;display_name&#39;: &#39;Awesome Tag Template&#39;},&#10;    update_mask={&#39;paths&#39;: [&#39;display_name&#39;]},&#10;    location=LOCATION,&#10;    tag_template_id=TEMPLATE_ID&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/datacatalog.html#updating-a-tag-template&#10;" description="Google Cloud - CloudDataCatalogUpdateTagTemplateOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudDataCatalogCreateTagOperator" value="CloudDataCatalogCreateTagOperator(&#10;    task_id=&#39;create_tag&#39;,&#10;    location=LOCATION,&#10;    entry_group=ENTRY_GROUP_ID,&#10;    entry=ENTRY_ID,&#10;    template_id=TEMPLATE_ID,&#10;    tag={&#39;fields&#39;: {FIELD_NAME_1: TagField(string_value=&#39;example-value-string&#39;)}}&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/datacatalog.html#creating-a-tag-on-an-entry&#10;" description="Google Cloud - CloudDataCatalogCreateTagOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudDataCatalogListTagsOperator" value="CloudDataCatalogListTagsOperator(&#10;    task_id=&#39;list_tags&#39;, location=LOCATION, entry_group=ENTRY_GROUP_ID, entry=ENTRY_ID&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/datacatalog.html#listing-an-tags-on-an-entry&#10;" description="Google Cloud - CloudDataCatalogListTagsOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudDataCatalogCreateTagTemplateFieldOperator" value="CloudDataCatalogCreateTagTemplateFieldOperator(&#10;    task_id=&#39;create_tag_template_field&#39;,&#10;    location=LOCATION,&#10;    tag_template=TEMPLATE_ID,&#10;    tag_template_field_id=FIELD_NAME_2,&#10;    tag_template_field=TagTemplateField(&#10;        display_name=&#39;second-field&#39;, type_=FieldType(primitive_type=&#39;STRING&#39;)&#10;    )&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/datacatalog.html#creating-a-field&#10;" description="Google Cloud - CloudDataCatalogCreateTagTemplateFieldOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudDataCatalogRenameTagTemplateFieldOperator" value="CloudDataCatalogRenameTagTemplateFieldOperator(&#10;    task_id=&#39;rename_tag_template_field&#39;,&#10;    location=LOCATION,&#10;    tag_template=TEMPLATE_ID,&#10;    field=FIELD_NAME_1,&#10;    new_tag_template_field_id=FIELD_NAME_3&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/datacatalog.html#renaming-a-field&#10;" description="Google Cloud - CloudDataCatalogRenameTagTemplateFieldOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudDataCatalogUpdateTagTemplateFieldOperator" value="CloudDataCatalogUpdateTagTemplateFieldOperator(&#10;    task_id=&#39;update_tag_template_field&#39;,&#10;    tag_template_field={&#39;display_name&#39;: &#39;Updated template field&#39;},&#10;    update_mask={&#39;paths&#39;: [&#39;display_name&#39;]},&#10;    location=LOCATION,&#10;    tag_template=TEMPLATE_ID,&#10;    tag_template_field_id=FIELD_NAME_1&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/datacatalog.html#updating-a-field&#10;" description="Google Cloud - CloudDataCatalogUpdateTagTemplateFieldOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudDataCatalogDeleteTagTemplateFieldOperator" value="CloudDataCatalogDeleteTagTemplateFieldOperator(&#10;    task_id=&#39;delete_tag_template_field&#39;,&#10;    location=LOCATION,&#10;    tag_template=TEMPLATE_ID,&#10;    field=FIELD_NAME_2,&#10;    force=True&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/datacatalog.html#deleting-a-field&#10;" description="Google Cloud - CloudDataCatalogDeleteTagTemplateFieldOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudDataCatalogSearchCatalogOperator" value="CloudDataCatalogSearchCatalogOperator(&#10;    task_id=&#39;search_catalog&#39;, scope={&#39;include_project_ids&#39;: [PROJECT_ID]}, query=f&#39;projectid:{PROJECT_ID}&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/datacatalog.html#search-resources&#10;" description="Google Cloud - CloudDataCatalogSearchCatalogOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="DataflowCreateJavaJobOperator" value="DataflowCreateJavaJobOperator(&#10;    task_id=&#39;start-java-job&#39;,&#10;    jar=GCS_JAR,&#10;    job_name=&#39;{{task.task_id}}&#39;,&#10;    options={&#10;        &#39;output&#39;: GCS_OUTPUT,&#10;    },&#10;    poll_sleep=10,&#10;    job_class=&#39;org.apache.beam.examples.WordCount&#39;,&#10;    check_if_running=CheckJobRunning.IgnoreJob,&#10;    location=&#39;europe-west3&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/dataflow.html#java-sdk-pipelines&#10;" description="Google Cloud - DataflowCreateJavaJobOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="DataflowCreatePythonJobOperator" value="DataflowCreatePythonJobOperator(&#10;    task_id=&#39;start-python-job&#39;,&#10;    py_file=GCS_PYTHON,&#10;    py_options=[],&#10;    job_name=&#39;{{task.task_id}}&#39;,&#10;    options={&#10;        &#39;output&#39;: GCS_OUTPUT,&#10;    },&#10;    py_requirements=[&#39;apache-beam[gcp]==2.21.0&#39;],&#10;    py_interpreter=&#39;python3&#39;,&#10;    py_system_site_packages=False,&#10;    location=&#39;europe-west3&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/dataflow.html#python-sdk-pipelines&#10;" description="Google Cloud - DataflowCreatePythonJobOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="DataflowTemplatedJobStartOperator" value="DataflowTemplatedJobStartOperator(&#10;    task_id=&#39;start-template-job&#39;,&#10;    template=&#39;gs://dataflow-templates/latest/Word_Count&#39;,&#10;    parameters={&#39;inputFile&#39;: &#39;gs://dataflow-samples/shakespeare/kinglear.txt&#39;, &#39;output&#39;: GCS_OUTPUT},&#10;    location=&#39;europe-west3&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/dataflow.html#templated-jobs&#10;" description="Google Cloud - DataflowTemplatedJobStartOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="DataflowStartFlexTemplateOperator" value="DataflowStartFlexTemplateOperator(&#10;    task_id=&#39;start_flex_template_streaming_beam_sql&#39;,&#10;    body={&#10;        &#39;launchParameter&#39;: {&#10;            &#39;containerSpecGcsPath&#39;: GCS_FLEX_TEMPLATE_TEMPLATE_PATH,&#10;            &#39;jobName&#39;: DATAFLOW_FLEX_TEMPLATE_JOB_NAME,&#10;            &#39;parameters&#39;: {&#10;                &#39;inputSubscription&#39;: PUBSUB_FLEX_TEMPLATE_SUBSCRIPTION,&#10;                &#39;outputTable&#39;: f&#39;{GCP_PROJECT_ID}:{BQ_FLEX_TEMPLATE_DATASET}.streaming_beam_sql&#39;,&#10;            },&#10;        }&#10;    },&#10;    do_xcom_push=True,&#10;    location=BQ_FLEX_TEMPLATE_LOCATION&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/dataflow.html#templated-jobs&#10;" description="Google Cloud - DataflowStartFlexTemplateOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="DataflowStartSqlJobOperator" value="DataflowStartSqlJobOperator(&#10;    task_id=&#39;start_sql_query&#39;,&#10;    job_name=DATAFLOW_SQL_JOB_NAME,&#10;    query=f&#39;&#39;&#10;        SELECT&#10;            sales_region as sales_region,&#10;            count(state_id) as count_state&#10;        FROM&#10;            bigquery.table.`{GCP_PROJECT_ID}`.`{BQ_SQL_DATASET}`.`{BQ_SQL_TABLE_INPUT}`&#10;        WHERE state_id &gt;= @state_id_min&#10;        GROUP BY sales_region;&#10;    &#39;&#39;,&#10;    options={&#10;        &#39;bigquery-project&#39;: GCP_PROJECT_ID,&#10;        &#39;bigquery-dataset&#39;: BQ_SQL_DATASET,&#10;        &#39;bigquery-table&#39;: BQ_SQL_TABLE_OUTPUT,&#10;        &#39;bigquery-write-disposition&#39;: &#39;write-truncate&#39;,&#10;        &#39;parameter&#39;: &#39;state_id_min:INT64:2&#39;,&#10;    },&#10;    location=DATAFLOW_SQL_LOCATION,&#10;    do_xcom_push=True&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/dataflow.html#dataflow-sql&#10;" description="Google Cloud - DataflowStartSqlJobOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="DataflowJobStatusSensor" value="DataflowJobStatusSensor(&#10;    task_id=&#39;wait-for-python-job-async-done&#39;,&#10;    job_id=&#39;{{task_instance.xcom_pull(&#39;start-python-job-async&#39;)[&#39;job_id&#39;]}}&#39;,&#10;    expected_statuses={DataflowJobStatus.JOB_STATE_DONE},&#10;    location=&#39;europe-west3&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/dataflow.html#sensors&#10;" description="Google Cloud - DataflowJobStatusSensor" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="DataflowJobMessagesSensor" value="DataflowJobMessagesSensor(&#10;    task_id=&#39;wait-for-python-job-async-message&#39;,&#10;    job_id=&#39;{{task_instance.xcom_pull(&#39;start-python-job-async&#39;)[&#39;job_id&#39;]}}&#39;,&#10;    location=&#39;europe-west3&#39;,&#10;    callback=check_message&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/dataflow.html#sensors&#10;" description="Google Cloud - DataflowJobMessagesSensor" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="DataflowJobAutoScalingEventsSensor" value="DataflowJobAutoScalingEventsSensor(&#10;    task_id=&#39;wait-for-python-job-async-autoscaling-event&#39;,&#10;    job_id=&#39;{{task_instance.xcom_pull(&#39;start-python-job-async&#39;)[&#39;job_id&#39;]}}&#39;,&#10;    location=&#39;europe-west3&#39;,&#10;    callback=check_autoscaling_event&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/dataflow.html#sensors&#10;" description="Google Cloud - DataflowJobAutoScalingEventsSensor" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="DataprepRunJobGroupOperator" value="DataprepRunJobGroupOperator(task_id=&#39;run_job_group&#39;, body_request=DATA)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/dataprep.html#run-job-group&#10;" description="Google Cloud - DataprepRunJobGroupOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="DataprepGetJobsForJobGroupOperator" value="DataprepGetJobsForJobGroupOperator(&#10;    task_id=&#39;get_jobs_for_job_group&#39;, job_id=DATAPREP_JOB_ID&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/dataprep.html#get-jobs-for-job-group&#10;" description="Google Cloud - DataprepGetJobsForJobGroupOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="DataprepGetJobGroupOperator" value="DataprepGetJobGroupOperator(&#10;    task_id=&#39;get_job_group&#39;,&#10;    job_group_id=DATAPREP_JOB_ID,&#10;    embed=&#39;,&#10;    include_deleted=False&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/dataprep.html#get-job-group&#10;" description="Google Cloud - DataprepGetJobGroupOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="DataprocCreateClusterOperator" value="DataprocCreateClusterOperator(&#10;    task_id=&#39;create_cluster&#39;,&#10;    project_id=PROJECT_ID,&#10;    cluster_config=CLUSTER_CONFIG,&#10;    region=REGION,&#10;    cluster_name=CLUSTER_NAME&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/dataproc.html#create-a-cluster&#10;" description="Google Cloud - DataprocCreateClusterOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="DataprocUpdateClusterOperator" value="DataprocUpdateClusterOperator(&#10;    task_id=&#39;scale_cluster&#39;,&#10;    cluster_name=CLUSTER_NAME,&#10;    cluster=CLUSTER_UPDATE,&#10;    update_mask=UPDATE_MASK,&#10;    graceful_decommission_timeout=TIMEOUT,&#10;    project_id=PROJECT_ID,&#10;    location=REGION&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/dataproc.html#update-a-cluster&#10;" description="Google Cloud - DataprocUpdateClusterOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="DataprocDeleteClusterOperator" value="DataprocDeleteClusterOperator(&#10;    task_id=&#39;delete_cluster&#39;, project_id=PROJECT_ID, cluster_name=CLUSTER_NAME, region=REGION&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/dataproc.html#deleting-a-cluster&#10;" description="Google Cloud - DataprocDeleteClusterOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="DataprocSubmitJobOperator" value="DataprocSubmitJobOperator(&#10;    task_id=&#39;pyspark_task&#39;, job=PYSPARK_JOB, location=REGION, project_id=PROJECT_ID&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/dataproc.html#submit-a-job-to-a-cluster&#10;" description="Google Cloud - DataprocSubmitJobOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="DataprocCreateWorkflowTemplateOperator" value="DataprocCreateWorkflowTemplateOperator(&#10;    task_id=&#39;create_workflow_template&#39;,&#10;    template=WORKFLOW_TEMPLATE,&#10;    project_id=PROJECT_ID,&#10;    location=REGION&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/dataproc.html#working-with-workflows-templates&#10;" description="Google Cloud - DataprocCreateWorkflowTemplateOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="DataprocInstantiateWorkflowTemplateOperator" value="DataprocInstantiateWorkflowTemplateOperator(&#10;    task_id=&#39;trigger_workflow&#39;, region=REGION, project_id=PROJECT_ID, template_id=WORKFLOW_NAME&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/dataproc.html#working-with-workflows-templates&#10;" description="Google Cloud - DataprocInstantiateWorkflowTemplateOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudDatastoreExportEntitiesOperator" value="CloudDatastoreExportEntitiesOperator(&#10;    task_id=&#39;export_task&#39;,&#10;    bucket=BUCKET,&#10;    project_id=GCP_PROJECT_ID,&#10;    overwrite_existing=True&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/datastore.html#export-entities&#10;" description="Google Cloud - CloudDatastoreExportEntitiesOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudDatastoreImportEntitiesOperator" value="CloudDatastoreImportEntitiesOperator(&#10;    task_id=&#39;import_task&#39;,&#10;    bucket=&#39;{{ task_instance.xcom_pull(&#39;export_task&#39;)[&#39;response&#39;][&#39;outputUrl&#39;].split(&#39;/&#39;)[2] }}&#39;,&#10;    file=&#39;{{ &#39;/&#39;.join(task_instance.xcom_pull(&#39;export_task&#39;)[&#39;response&#39;][&#39;outputUrl&#39;].split(&#39;/&#39;)[3:]) }}&#39;,&#10;    project_id=GCP_PROJECT_ID&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/datastore.html#import-entities&#10;" description="Google Cloud - CloudDatastoreImportEntitiesOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudDatastoreAllocateIdsOperator" value="CloudDatastoreAllocateIdsOperator(&#10;    task_id=&#39;allocate_ids&#39;, partial_keys=KEYS, project_id=GCP_PROJECT_ID&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/datastore.html#allocate-ids&#10;" description="Google Cloud - CloudDatastoreAllocateIdsOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudDatastoreBeginTransactionOperator" value="CloudDatastoreBeginTransactionOperator(&#10;    task_id=&#39;begin_transaction_commit&#39;,&#10;    transaction_options=TRANSACTION_OPTIONS,&#10;    project_id=GCP_PROJECT_ID&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/datastore.html#begin-transaction&#10;" description="Google Cloud - CloudDatastoreBeginTransactionOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudDatastoreCommitOperator" value="CloudDatastoreCommitOperator(&#10;    task_id=&#39;commit_task&#39;, body=COMMIT_BODY, project_id=GCP_PROJECT_ID&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/datastore.html#commit-transaction&#10;" description="Google Cloud - CloudDatastoreCommitOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudDatastoreRunQueryOperator" value="CloudDatastoreRunQueryOperator(task_id=&#39;run_query&#39;, body=QUERY, project_id=GCP_PROJECT_ID)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/datastore.html#run-query&#10;" description="Google Cloud - CloudDatastoreRunQueryOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudDatastoreRollbackOperator" value="CloudDatastoreRollbackOperator(&#10;    task_id=&#39;rollback_transaction&#39;,&#10;    transaction=&#39;{{ task_instance.xcom_pull(&#39;begin_transaction_to_rollback&#39;) }}&#39;&#10;)begin_transaction_to_rollback &gt;&gt; rollback_transaction&#39;&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/datastore.html#roll-back-transaction&#10;" description="Google Cloud - CloudDatastoreRollbackOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudFunctionDeleteFunctionOperator" value="CloudFunctionDeleteFunctionOperator(task_id=&#39;gcf_delete_task&#39;, name=FUNCTION_NAME)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/functions.html#using-the-operator&#10;" description="Google Cloud - CloudFunctionDeleteFunctionOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudFunctionDeployFunctionOperator" value="CloudFunctionDeployFunctionOperator(&#10;    task_id=&#39;gcf_deploy_task&#39;,&#10;    project_id=GCP_PROJECT_ID,&#10;    location=GCP_LOCATION,&#10;    body=body,&#10;    validate_body=GCP_VALIDATE_BODY&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/functions.html#id1&#10;" description="Google Cloud - CloudFunctionDeployFunctionOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="GCSToBigQueryOperator" value="GCSToBigQueryOperator(&#10;    task_id=&#39;gcs_to_bigquery_example&#39;,&#10;    bucket=&#39;cloud-samples-data&#39;,&#10;    source_objects=[&#39;bigquery/us-states/us-states.csv&#39;],&#10;    destination_project_dataset_table=f&#39;{DATASET_NAME}.{TABLE_NAME}&#39;,&#10;    schema_fields=[&#10;        {&#39;name&#39;: &#39;name&#39;, &#39;type&#39;: &#39;STRING&#39;, &#39;mode&#39;: &#39;NULLABLE&#39;},&#10;        {&#39;name&#39;: &#39;post_abbr&#39;, &#39;type&#39;: &#39;STRING&#39;, &#39;mode&#39;: &#39;NULLABLE&#39;},&#10;    ],&#10;    write_disposition=&#39;WRITE_TRUNCATE&#39;,&#10;    dag=dag&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/gcs.html#gcstobigqueryoperator&#10;" description="Google Cloud - GCSToBigQueryOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="GCSTimeSpanFileTransformOperator" value="GCSTimeSpanFileTransformOperator(&#10;        task_id=&#39;gcs_timespan_transform_files&#39;,&#10;        source_bucket=SOURCE_BUCKET,&#10;        source_prefix=SOURCE_PREFIX,&#10;        source_gcp_conn_id=SOURCE_GCP_CONN_ID,&#10;        destination_bucket=DESTINATION_BUCKET,&#10;        destination_prefix=DESTINATION_PREFIX,&#10;        destination_gcp_conn_id=DESTINATION_GCP_CONN_ID,&#10;        transform_script=[&#39;python&#39;, PATH_TO_TRANSFORM_SCRIPT],&#10;    )&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/gcs.html#gcstimespanfiletransformoperator&#10;" description="Google Cloud - GCSTimeSpanFileTransformOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="GCSDeleteBucketOperator" value="GCSDeleteBucketOperator(task_id=&#39;delete_bucket_1&#39;, bucket_name=BUCKET_1)delete_bucket_2 = GCSDeleteBucketOperator(task_id=&#39;delete_bucket_2&#39;, bucket_name=BUCKET_2)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/gcs.html#deleting-bucket&#10;" description="Google Cloud - GCSDeleteBucketOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="GCSObjectExistenceSensor" value="GCSObjectExistenceSensor(&#10;    bucket=BUCKET_1,&#10;    object=PATH_TO_UPLOAD_FILE,&#10;    mode=&#39;poke&#39;,&#10;    task_id=&#39;gcs_object_exists_task&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/gcs.html#gcsobjectexistencesensor&#10;" description="Google Cloud - GCSObjectExistenceSensor" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="GCSObjectsWithPrefixExistenceSensor" value="GCSObjectsWithPrefixExistenceSensor(&#10;    bucket=BUCKET_1,&#10;    prefix=PATH_TO_UPLOAD_FILE_PREFIX,&#10;    mode=&#39;poke&#39;,&#10;    task_id=&#39;gcs_object_with_prefix_exists_task&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/gcs.html#gcsobjectswithprefixexistencesensor&#10;" description="Google Cloud - GCSObjectsWithPrefixExistenceSensor" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="GKECreateClusterOperator" value="GKECreateClusterOperator(&#10;    task_id=&#39;create_cluster&#39;,&#10;    project_id=GCP_PROJECT_ID,&#10;    location=GCP_LOCATION,&#10;    body=CLUSTER&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/kubernetes_engine.html#create-gke-cluster&#10;" description="Google Cloud - GKECreateClusterOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="GKEDeleteClusterOperator" value="GKEDeleteClusterOperator(&#10;    task_id=&#39;delete_cluster&#39;,&#10;    name=CLUSTER_NAME,&#10;    project_id=GCP_PROJECT_ID,&#10;    location=GCP_LOCATION&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/kubernetes_engine.html#delete-gke-cluster&#10;" description="Google Cloud - GKEDeleteClusterOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="GKEStartPodOperator" value="GKEStartPodOperator(&#10;    task_id=&#39;pod_task_xcom&#39;,&#10;    project_id=GCP_PROJECT_ID,&#10;    location=GCP_LOCATION,&#10;    cluster_name=CLUSTER_NAME,&#10;    do_xcom_push=True,&#10;    namespace=&#39;default&#39;,&#10;    image=&#39;alpine&#39;,&#10;    cmds=[&#39;sh&#39;, &#39;-c&#39;, &#39;mkdir -p /airflow/xcom/;echo \&#39;[1,2,3,4]\&#39; &gt; /airflow/xcom/return.json&#39;],&#10;    name=&#39;test-pod-xcom&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/kubernetes_engine.html#use-of-xcom&#10;" description="Google Cloud - GKEStartPodOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="LifeSciencesRunPipelineOperator" value="LifeSciencesRunPipelineOperator(&#10;        task_id=&#39;simple-action-pipeline&#39;,&#10;        body=SIMPLE_ACTION_PIPELINE,&#10;        project_id=PROJECT_ID,&#10;        location=LOCATION,&#10;    )&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/life_sciences.html#running-a-pipeline&#10;" description="Google Cloud - LifeSciencesRunPipelineOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="MLEngineStartTrainingJobOperator" value="MLEngineStartTrainingJobOperator(&#10;    task_id=&#39;training&#39;,&#10;    project_id=PROJECT_ID,&#10;    region=&#39;us-central1&#39;,&#10;    job_id=&#39;training-job-{{ ts_nodash }}-{{ params.model_name }}&#39;,&#10;    runtime_version=&#39;1.15&#39;,&#10;    python_version=&#39;3.7&#39;,&#10;    job_dir=JOB_DIR,&#10;    package_uris=[TRAINER_URI],&#10;    training_python_module=TRAINER_PY_MODULE,&#10;    training_args=[],&#10;    labels={&#39;job_type&#39;: &#39;training&#39;}&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/mlengine.html#launching-a-job&#10;" description="Google Cloud - MLEngineStartTrainingJobOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="MLEngineCreateModelOperator" value="MLEngineCreateModelOperator(&#10;    task_id=&#39;create-model&#39;,&#10;    project_id=PROJECT_ID,&#10;    model={&#10;        &#39;name&#39;: MODEL_NAME,&#10;    }&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/mlengine.html#creating-a-model&#10;" description="Google Cloud - MLEngineCreateModelOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="MLEngineGetModelOperator" value="MLEngineGetModelOperator(&#10;    task_id=&#39;get-model&#39;,&#10;    project_id=PROJECT_ID,&#10;    model_name=MODEL_NAME&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/mlengine.html#getting-a-model&#10;" description="Google Cloud - MLEngineGetModelOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="MLEngineCreateVersionOperator" value="MLEngineCreateVersionOperator(&#10;    task_id=&#39;create-version&#39;,&#10;    project_id=PROJECT_ID,&#10;    model_name=MODEL_NAME,&#10;    version={&#10;        &#39;name&#39;: &#39;v1&#39;,&#10;        &#39;description&#39;: &#39;First-version&#39;,&#10;        &#39;deployment_uri&#39;: f&#39;{JOB_DIR}/keras_export/&#39;,&#10;        &#39;runtime_version&#39;: &#39;1.15&#39;,&#10;        &#39;machineType&#39;: &#39;mls1-c1-m2&#39;,&#10;        &#39;framework&#39;: &#39;TENSORFLOW&#39;,&#10;        &#39;pythonVersion&#39;: &#39;3.7&#39;,&#10;    }&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/mlengine.html#creating-model-versions&#10;" description="Google Cloud - MLEngineCreateVersionOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="MLEngineSetDefaultVersionOperator" value="MLEngineSetDefaultVersionOperator(&#10;    task_id=&#39;set-default-version&#39;,&#10;    project_id=PROJECT_ID,&#10;    model_name=MODEL_NAME,&#10;    version_name=&#39;v2&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/mlengine.html#managing-model-versions&#10;" description="Google Cloud - MLEngineSetDefaultVersionOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="MLEngineListVersionsOperator" value="MLEngineListVersionsOperator(&#10;    task_id=&#39;list-version&#39;,&#10;    project_id=PROJECT_ID,&#10;    model_name=MODEL_NAME&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/mlengine.html#managing-model-versions&#10;" description="Google Cloud - MLEngineListVersionsOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="MLEngineStartBatchPredictionJobOperator" value="MLEngineStartBatchPredictionJobOperator(&#10;    task_id=&#39;prediction&#39;,&#10;    project_id=PROJECT_ID,&#10;    job_id=&#39;prediction-{{ ts_nodash }}-{{ params.model_name }}&#39;,&#10;    region=&#39;us-central1&#39;,&#10;    model_name=MODEL_NAME,&#10;    data_format=&#39;TEXT&#39;,&#10;    input_paths=[PREDICTION_INPUT],&#10;    output_path=PREDICTION_OUTPUT,&#10;    labels={&#39;job_type&#39;: &#39;prediction&#39;}&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/mlengine.html#making-predictions&#10;" description="Google Cloud - MLEngineStartBatchPredictionJobOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="MLEngineDeleteVersionOperator" value="MLEngineDeleteVersionOperator(&#10;    task_id=&#39;delete-version&#39;, project_id=PROJECT_ID, model_name=MODEL_NAME, version_name=&#39;v1&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/mlengine.html#cleaning-up&#10;" description="Google Cloud - MLEngineDeleteVersionOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="MLEngineDeleteModelOperator" value="MLEngineDeleteModelOperator(&#10;    task_id=&#39;delete-model&#39;, project_id=PROJECT_ID, model_name=MODEL_NAME, delete_contents=True&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/mlengine.html#cleaning-up&#10;" description="Google Cloud - MLEngineDeleteModelOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudNaturalLanguageAnalyzeEntitiesOperator" value="CloudNaturalLanguageAnalyzeEntitiesOperator(&#10;    document=document, task_id=&#39;analyze_entities&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/natural_language.html#analyzing-entities&#10;" description="Google Cloud - CloudNaturalLanguageAnalyzeEntitiesOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudNaturalLanguageAnalyzeEntitySentimentOperator" value="CloudNaturalLanguageAnalyzeEntitySentimentOperator(&#10;    document=document, task_id=&#39;analyze_entity_sentiment&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/natural_language.html#analyzing-entity-sentiment&#10;" description="Google Cloud - CloudNaturalLanguageAnalyzeEntitySentimentOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudNaturalLanguageAnalyzeSentimentOperator" value="CloudNaturalLanguageAnalyzeSentimentOperator(&#10;    document=document, task_id=&#39;analyze_sentiment&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/natural_language.html#analyzing-sentiment&#10;" description="Google Cloud - CloudNaturalLanguageAnalyzeSentimentOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudNaturalLanguageClassifyTextOperator" value="CloudNaturalLanguageClassifyTextOperator(&#10;    document=document, task_id=&#39;analyze_classify_text&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/natural_language.html#classifying-content&#10;" description="Google Cloud - CloudNaturalLanguageClassifyTextOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="PubSubCreateTopicOperator" value="PubSubCreateTopicOperator(&#10;        task_id=&#39;create_topic&#39;, topic=TOPIC_FOR_SENSOR_DAG, project_id=GCP_PROJECT_ID, fail_if_exists=False&#10;    )&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/pubsub.html#creating-a-pubsub-topic&#10;" description="Google Cloud - PubSubCreateTopicOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="PubSubCreateSubscriptionOperator" value="PubSubCreateSubscriptionOperator(&#10;        task_id=&#39;subscribe_task&#39;, project_id=GCP_PROJECT_ID, topic=TOPIC_FOR_SENSOR_DAG&#10;    )&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/pubsub.html#creating-a-pubsub-subscription&#10;" description="Google Cloud - PubSubCreateSubscriptionOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="PubSubPublishMessageOperator" value="PubSubPublishMessageOperator(&#10;        task_id=&#39;publish_task&#39;,&#10;        project_id=GCP_PROJECT_ID,&#10;        topic=TOPIC_FOR_SENSOR_DAG,&#10;        messages=[MESSAGE] * 10,&#10;    )&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/pubsub.html#publishing-pubsub-messages&#10;" description="Google Cloud - PubSubPublishMessageOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="PubSubDeleteSubscriptionOperator" value="PubSubDeleteSubscriptionOperator(&#10;        task_id=&#39;unsubscribe_task&#39;,&#10;        project_id=GCP_PROJECT_ID,&#10;        subscription=&#39;{{ task_instance.xcom_pull(&#39;subscribe_task&#39;) }}&#39;,&#10;    )&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/pubsub.html#deleting-a-pubsub-subscription&#10;" description="Google Cloud - PubSubDeleteSubscriptionOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="PubSubDeleteTopicOperator" value="PubSubDeleteTopicOperator(&#10;        task_id=&#39;delete_topic&#39;, topic=TOPIC_FOR_SENSOR_DAG, project_id=GCP_PROJECT_ID&#10;    )&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/pubsub.html#deleting-a-pubsub-topic&#10;" description="Google Cloud - PubSubDeleteTopicOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="SpannerDeployInstanceOperator" value="SpannerDeployInstanceOperator(&#10;    project_id=GCP_PROJECT_ID,&#10;    instance_id=GCP_SPANNER_INSTANCE_ID,&#10;    configuration_name=GCP_SPANNER_CONFIG_NAME,&#10;    node_count=int(GCP_SPANNER_NODE_COUNT),&#10;    display_name=GCP_SPANNER_DISPLAY_NAME,&#10;    task_id=&#39;spanner_instance_create_task&#39;&#10;)spanner_instance_update_task = SpannerDeployInstanceOperator(&#10;    instance_id=GCP_SPANNER_INSTANCE_ID,&#10;    configuration_name=GCP_SPANNER_CONFIG_NAME,&#10;    node_count=int(GCP_SPANNER_NODE_COUNT) + 1,&#10;    display_name=GCP_SPANNER_DISPLAY_NAME + &#39;_updated&#39;,&#10;    task_id=&#39;spanner_instance_update_task&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/spanner.html#using-the-operator&#10;" description="Google Cloud - SpannerDeployInstanceOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="SpannerDeleteDatabaseInstanceOperator" value="SpannerDeleteDatabaseInstanceOperator(&#10;    project_id=GCP_PROJECT_ID,&#10;    instance_id=GCP_SPANNER_INSTANCE_ID,&#10;    database_id=GCP_SPANNER_DATABASE_ID,&#10;    task_id=&#39;spanner_database_delete_task&#39;&#10;)spanner_database_delete_task2 = SpannerDeleteDatabaseInstanceOperator(&#10;    instance_id=GCP_SPANNER_INSTANCE_ID,&#10;    database_id=GCP_SPANNER_DATABASE_ID,&#10;    task_id=&#39;spanner_database_delete_task2&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/spanner.html#id1&#10;" description="Google Cloud - SpannerDeleteDatabaseInstanceOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="SpannerDeployDatabaseInstanceOperator" value="SpannerDeployDatabaseInstanceOperator(&#10;    project_id=GCP_PROJECT_ID,&#10;    instance_id=GCP_SPANNER_INSTANCE_ID,&#10;    database_id=GCP_SPANNER_DATABASE_ID,&#10;    ddl_statements=[&#10;        &#39;CREATE TABLE my_table1 (id INT64, name STRING(MAX)) PRIMARY KEY (id),&#10;        &#39;CREATE TABLE my_table2 (id INT64, name STRING(MAX)) PRIMARY KEY (id),&#10;    ],&#10;    task_id=&#39;spanner_database_deploy_task&#39;&#10;)spanner_database_deploy_task2 = SpannerDeployDatabaseInstanceOperator(&#10;    instance_id=GCP_SPANNER_INSTANCE_ID,&#10;    database_id=GCP_SPANNER_DATABASE_ID,&#10;    ddl_statements=[&#10;        &#39;CREATE TABLE my_table1 (id INT64, name STRING(MAX)) PRIMARY KEY (id),&#10;        &#39;CREATE TABLE my_table2 (id INT64, name STRING(MAX)) PRIMARY KEY (id),&#10;    ],&#10;    task_id=&#39;spanner_database_deploy_task2&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/spanner.html#id4&#10;" description="Google Cloud - SpannerDeployDatabaseInstanceOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="SpannerUpdateDatabaseInstanceOperator" value="SpannerUpdateDatabaseInstanceOperator(&#10;    project_id=GCP_PROJECT_ID,&#10;    instance_id=GCP_SPANNER_INSTANCE_ID,&#10;    database_id=GCP_SPANNER_DATABASE_ID,&#10;    ddl_statements=[&#10;        &#39;CREATE TABLE my_table3 (id INT64, name STRING(MAX)) PRIMARY KEY (id),&#10;    ],&#10;    task_id=&#39;spanner_database_update_task&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/spanner.html#id7&#10;" description="Google Cloud - SpannerUpdateDatabaseInstanceOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="SpannerQueryDatabaseInstanceOperator" value="SpannerQueryDatabaseInstanceOperator(&#10;    project_id=GCP_PROJECT_ID,&#10;    instance_id=GCP_SPANNER_INSTANCE_ID,&#10;    database_id=GCP_SPANNER_DATABASE_ID,&#10;    query=[&#39;DELETE FROM my_table2 WHERE true&#39;],&#10;    task_id=&#39;spanner_instance_query_task&#39;&#10;)spanner_instance_query_task2 = SpannerQueryDatabaseInstanceOperator(&#10;    instance_id=GCP_SPANNER_INSTANCE_ID,&#10;    database_id=GCP_SPANNER_DATABASE_ID,&#10;    query=[&#39;DELETE FROM my_table2 WHERE true&#39;],&#10;    task_id=&#39;spanner_instance_query_task2&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/spanner.html#id10&#10;" description="Google Cloud - SpannerQueryDatabaseInstanceOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="SpannerDeleteInstanceOperator" value="SpannerDeleteInstanceOperator(&#10;    project_id=GCP_PROJECT_ID, instance_id=GCP_SPANNER_INSTANCE_ID, task_id=&#39;spanner_instance_delete_task&#39;&#10;)spanner_instance_delete_task2 = SpannerDeleteInstanceOperator(&#10;    instance_id=GCP_SPANNER_INSTANCE_ID, task_id=&#39;spanner_instance_delete_task2&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/spanner.html#id13&#10;" description="Google Cloud - SpannerDeleteInstanceOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudSpeechToTextRecognizeSpeechOperator" value="CloudSpeechToTextRecognizeSpeechOperator(&#10;    config=CONFIG, audio=AUDIO, task_id=&#39;speech_to_text_recognize_task&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/speech_to_text.html#using-the-operator&#10;" description="Google Cloud - CloudSpeechToTextRecognizeSpeechOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="StackdriverListAlertPoliciesOperator" value="StackdriverListAlertPoliciesOperator(&#10;    task_id=&#39;list-alert-policies&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/stackdriver.html#using-the-operator&#10;" description="Google Cloud - StackdriverListAlertPoliciesOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="StackdriverEnableAlertPoliciesOperator" value="StackdriverEnableAlertPoliciesOperator(&#10;    task_id=&#39;enable-alert-policies&#39;,&#10;    filter_=&#39;(displayName=&#39;test alert 1&#39; OR displayName=&#39;test alert 2&#10;);&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/stackdriver.html#id1&#10;" description="Google Cloud - StackdriverEnableAlertPoliciesOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="StackdriverDisableAlertPoliciesOperator" value="StackdriverDisableAlertPoliciesOperator(&#10;    task_id=&#39;disable-alert-policies&#39;,&#10;    filter_=&#39;displayName=&#39;test alert 1&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/stackdriver.html#id2&#10;" description="Google Cloud - StackdriverDisableAlertPoliciesOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="StackdriverUpsertAlertOperator" value="StackdriverUpsertAlertOperator(&#10;    task_id=&#39;create-alert-policies&#39;,&#10;    alerts=json.dumps({&#39;policies&#39;: [TEST_ALERT_POLICY_1, TEST_ALERT_POLICY_2]})&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/stackdriver.html#id3&#10;" description="Google Cloud - StackdriverUpsertAlertOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="StackdriverDeleteAlertOperator" value="StackdriverDeleteAlertOperator(&#10;    task_id=&#39;delete-alert-policy&#39;,&#10;    name=&#39;{{ task_instance.xcom_pull(&#39;list-alert-policies&#39;)[0][&#39;name&#39;] }}&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/stackdriver.html#id4&#10;" description="Google Cloud - StackdriverDeleteAlertOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="StackdriverListNotificationChannelsOperator" value="StackdriverListNotificationChannelsOperator(&#10;    task_id=&#39;list-notification-channel&#39;, filter_=&#39;type=&#39;slack&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/stackdriver.html#id5&#10;" description="Google Cloud - StackdriverListNotificationChannelsOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="StackdriverEnableNotificationChannelsOperator" value="StackdriverEnableNotificationChannelsOperator(&#10;    task_id=&#39;enable-notification-channel&#39;, filter_=&#39;type=&#39;slack&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/stackdriver.html#id6&#10;" description="Google Cloud - StackdriverEnableNotificationChannelsOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="StackdriverDisableNotificationChannelsOperator" value="StackdriverDisableNotificationChannelsOperator(&#10;    task_id=&#39;disable-notification-channel&#39;, filter_=&#39;displayName=&#39;channel1&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/stackdriver.html#id7&#10;" description="Google Cloud - StackdriverDisableNotificationChannelsOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="StackdriverDeleteNotificationChannelOperator" value="StackdriverDeleteNotificationChannelOperator(&#10;    task_id=&#39;delete-notification-channel&#39;,&#10;    name=&#39;{{ task_instance.xcom_pull(&#39;list-notification-channel&#39;)[0][&#39;name&#39;] }}&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/stackdriver.html#id9&#10;" description="Google Cloud - StackdriverDeleteNotificationChannelOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudTextToSpeechSynthesizeOperator" value="CloudTextToSpeechSynthesizeOperator(&#10;    project_id=GCP_PROJECT_ID,&#10;    input_data=INPUT,&#10;    voice=VOICE,&#10;    audio_config=AUDIO_CONFIG,&#10;    target_bucket_name=BUCKET_NAME,&#10;    target_filename=FILENAME,&#10;    task_id=&#39;text_to_speech_synthesize_task&#39;&#10;)text_to_speech_synthesize_task2 = CloudTextToSpeechSynthesizeOperator(&#10;    input_data=INPUT,&#10;    voice=VOICE,&#10;    audio_config=AUDIO_CONFIG,&#10;    target_bucket_name=BUCKET_NAME,&#10;    target_filename=FILENAME,&#10;    task_id=&#39;text_to_speech_synthesize_task2&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/text_to_speech.html#using-the-operator&#10;" description="Google Cloud - CloudTextToSpeechSynthesizeOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudTranslateTextOperator" value="CloudTranslateTextOperator(&#10;    task_id=&#39;translate&#39;,&#10;    values=[&#39;zażółć gęślą jaźń&#39;],&#10;    target_language=&#39;en&#39;,&#10;    format_=&#39;text&#39;,&#10;    source_language=None,&#10;    model=&#39;base&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/translate.html#using-the-operator&#10;" description="Google Cloud - CloudTranslateTextOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudTranslateSpeechOperator" value="CloudTranslateSpeechOperator(&#10;    project_id=GCP_PROJECT_ID,&#10;    audio=AUDIO,&#10;    config=CONFIG,&#10;    target_language=TARGET_LANGUAGE,&#10;    format_=FORMAT,&#10;    source_language=SOURCE_LANGUAGE,&#10;    model=MODEL,&#10;    task_id=&#39;translate_speech_task&#39;&#10;)translate_speech_task2 = CloudTranslateSpeechOperator(&#10;    audio=AUDIO,&#10;    config=CONFIG,&#10;    target_language=TARGET_LANGUAGE,&#10;    format_=FORMAT,&#10;    source_language=SOURCE_LANGUAGE,&#10;    model=MODEL,&#10;    task_id=&#39;translate_speech_task2&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/translate_speech.html#using-the-operator&#10;" description="Google Cloud - CloudTranslateSpeechOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudVideoIntelligenceDetectVideoLabelsOperator" value="CloudVideoIntelligenceDetectVideoLabelsOperator(&#10;    input_uri=INPUT_URI,&#10;    output_uri=None,&#10;    video_context=None,&#10;    timeout=5,&#10;    task_id=&#39;detect_video_label&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/video_intelligence.html#using-the-operator&#10;" description="Google Cloud - CloudVideoIntelligenceDetectVideoLabelsOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudVideoIntelligenceDetectVideoExplicitContentOperator" value="CloudVideoIntelligenceDetectVideoExplicitContentOperator(&#10;    input_uri=INPUT_URI,&#10;    output_uri=None,&#10;    video_context=None,&#10;    retry=Retry(maximum=10.0),&#10;    timeout=5,&#10;    task_id=&#39;detect_video_explicit_content&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/video_intelligence.html#id1&#10;" description="Google Cloud - CloudVideoIntelligenceDetectVideoExplicitContentOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudVideoIntelligenceDetectVideoShotsOperator" value="CloudVideoIntelligenceDetectVideoShotsOperator(&#10;    input_uri=INPUT_URI,&#10;    output_uri=None,&#10;    video_context=None,&#10;    retry=Retry(maximum=10.0),&#10;    timeout=5,&#10;    task_id=&#39;detect_video_shots&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/video_intelligence.html#id5&#10;" description="Google Cloud - CloudVideoIntelligenceDetectVideoShotsOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudVisionAddProductToProductSetOperator" value="CloudVisionAddProductToProductSetOperator(&#10;    location=GCP_VISION_LOCATION,&#10;    product_set_id=&#39;{{ task_instance.xcom_pull(&#39;product_set_create&#39;) }}&#39;,&#10;    product_id=&#39;{{ task_instance.xcom_pull(&#39;product_create&#39;) }}&#39;,&#10;    retry=Retry(maximum=10.0),&#10;    timeout=5,&#10;    task_id=&#39;add_product_to_product_set&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/vision.html#using-the-operator&#10;" description="Google Cloud - CloudVisionAddProductToProductSetOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudVisionImageAnnotateOperator" value="CloudVisionImageAnnotateOperator(&#10;    request=annotate_image_request, retry=Retry(maximum=10.0), timeout=5, task_id=&#39;annotate_image&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/vision.html#id1&#10;" description="Google Cloud - CloudVisionImageAnnotateOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudVisionCreateProductOperator" value="CloudVisionCreateProductOperator(&#10;    location=GCP_VISION_LOCATION,&#10;    product=product,&#10;    retry=Retry(maximum=10.0),&#10;    timeout=5,&#10;    task_id=&#39;product_create&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/vision.html#id4&#10;" description="Google Cloud - CloudVisionCreateProductOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudVisionDeleteProductOperator" value="CloudVisionDeleteProductOperator(&#10;    location=GCP_VISION_LOCATION,&#10;    product_id=&#39;{{ task_instance.xcom_pull(&#39;product_create&#39;) }}&#39;,&#10;    task_id=&#39;product_delete&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/vision.html#id7&#10;" description="Google Cloud - CloudVisionDeleteProductOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudVisionGetProductOperator" value="CloudVisionGetProductOperator(&#10;    location=GCP_VISION_LOCATION,&#10;    product_id=&#39;{{ task_instance.xcom_pull(&#39;product_create&#39;) }}&#39;,&#10;    task_id=&#39;product_get&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/vision.html#id10&#10;" description="Google Cloud - CloudVisionGetProductOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudVisionCreateProductSetOperator" value="CloudVisionCreateProductSetOperator(&#10;    location=GCP_VISION_LOCATION,&#10;    product_set=product_set,&#10;    retry=Retry(maximum=10.0),&#10;    timeout=5,&#10;    task_id=&#39;product_set_create&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/vision.html#id13&#10;" description="Google Cloud - CloudVisionCreateProductSetOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudVisionDeleteProductSetOperator" value="CloudVisionDeleteProductSetOperator(&#10;    location=GCP_VISION_LOCATION,&#10;    product_set_id=&#39;{{ task_instance.xcom_pull(&#39;product_set_create&#39;) }}&#39;,&#10;    task_id=&#39;product_set_delete&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/vision.html#id16&#10;" description="Google Cloud - CloudVisionDeleteProductSetOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudVisionGetProductSetOperator" value="CloudVisionGetProductSetOperator(&#10;    location=GCP_VISION_LOCATION,&#10;    product_set_id=&#39;{{ task_instance.xcom_pull(&#39;product_set_create&#39;) }}&#39;,&#10;    task_id=&#39;product_set_get&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/vision.html#id19&#10;" description="Google Cloud - CloudVisionGetProductSetOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudVisionUpdateProductSetOperator" value="CloudVisionUpdateProductSetOperator(&#10;    location=GCP_VISION_LOCATION,&#10;    product_set_id=&#39;{{ task_instance.xcom_pull(&#39;product_set_create&#39;) }}&#39;,&#10;    product_set=ProductSet(display_name=&#39;My Product Set 2&#39;),&#10;    task_id=&#39;product_set_update&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/vision.html#id22&#10;" description="Google Cloud - CloudVisionUpdateProductSetOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudVisionUpdateProductOperator" value="CloudVisionUpdateProductOperator(&#10;    location=GCP_VISION_LOCATION,&#10;    product_id=&#39;{{ task_instance.xcom_pull(&#39;product_create&#39;) }}&#39;,&#10;    product=Product(display_name=&#39;My Product 2&#39;, description=&#39;My updated description&#39;),&#10;    task_id=&#39;product_update&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/vision.html#id25&#10;" description="Google Cloud - CloudVisionUpdateProductOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudVisionCreateReferenceImageOperator" value="CloudVisionCreateReferenceImageOperator(&#10;    location=GCP_VISION_LOCATION,&#10;    reference_image=reference_image,&#10;    product_id=&#39;{{ task_instance.xcom_pull(&#39;product_create&#39;) }}&#39;,&#10;    reference_image_id=GCP_VISION_REFERENCE_IMAGE_ID,&#10;    retry=Retry(maximum=10.0),&#10;    timeout=5,&#10;    task_id=&#39;reference_image_create&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/vision.html#id28&#10;" description="Google Cloud - CloudVisionCreateReferenceImageOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudVisionDeleteReferenceImageOperator" value="CloudVisionDeleteReferenceImageOperator(&#10;    location=GCP_VISION_LOCATION,&#10;    product_id=&#39;{{ task_instance.xcom_pull(&#39;product_create&#39;) }}&#39;,&#10;    reference_image_id=GCP_VISION_REFERENCE_IMAGE_ID,&#10;    retry=Retry(maximum=10.0),&#10;    timeout=5,&#10;    task_id=&#39;reference_image_delete&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/vision.html#id31&#10;" description="Google Cloud - CloudVisionDeleteReferenceImageOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudVisionRemoveProductFromProductSetOperator" value="CloudVisionRemoveProductFromProductSetOperator(&#10;    location=GCP_VISION_LOCATION,&#10;    product_set_id=&#39;{{ task_instance.xcom_pull(&#39;product_set_create&#39;) }}&#39;,&#10;    product_id=&#39;{{ task_instance.xcom_pull(&#39;product_create&#39;) }}&#39;,&#10;    retry=Retry(maximum=10.0),&#10;    timeout=5,&#10;    task_id=&#39;remove_product_from_product_set&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/vision.html#id34&#10;" description="Google Cloud - CloudVisionRemoveProductFromProductSetOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudVisionDetectTextOperator" value="CloudVisionDetectTextOperator(&#10;    image=DETECT_IMAGE,&#10;    retry=Retry(maximum=10.0),&#10;    timeout=5,&#10;    task_id=&#39;detect_text&#39;,&#10;    language_hints=&#39;en&#39;,&#10;    web_detection_params={&#39;include_geo_results&#39;: True}&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/vision.html#id37&#10;" description="Google Cloud - CloudVisionDetectTextOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudVisionTextDetectOperator" value="CloudVisionTextDetectOperator(&#10;    image=DETECT_IMAGE, retry=Retry(maximum=10.0), timeout=5, task_id=&#39;document_detect_text&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/vision.html#id40&#10;" description="Google Cloud - CloudVisionTextDetectOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudVisionDetectImageLabelsOperator" value="CloudVisionDetectImageLabelsOperator(&#10;    image=DETECT_IMAGE, retry=Retry(maximum=10.0), timeout=5, task_id=&#39;detect_labels&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/vision.html#id43&#10;" description="Google Cloud - CloudVisionDetectImageLabelsOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="CloudVisionDetectImageSafeSearchOperator" value="CloudVisionDetectImageSafeSearchOperator(&#10;    image=DETECT_IMAGE, retry=Retry(maximum=10.0), timeout=5, task_id=&#39;detect_safe_search&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/vision.html#id46&#10;" description="Google Cloud - CloudVisionDetectImageSafeSearchOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="WorkflowsCreateWorkflowOperator" value="WorkflowsCreateWorkflowOperator(&#10;    task_id=&#39;create_workflow&#39;,&#10;    location=LOCATION,&#10;    project_id=PROJECT_ID,&#10;    workflow=WORKFLOW,&#10;    workflow_id=WORKFLOW_ID&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/workflows.html#create-workflow&#10;" description="Google Cloud - WorkflowsCreateWorkflowOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="WorkflowsUpdateWorkflowOperator" value="WorkflowsUpdateWorkflowOperator(&#10;    task_id=&#39;update_workflows&#39;,&#10;    location=LOCATION,&#10;    project_id=PROJECT_ID,&#10;    workflow_id=WORKFLOW_ID,&#10;    update_mask={&#39;paths&#39;: [&#39;name&#39;, &#39;description&#39;]}&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/workflows.html#update-workflow&#10;" description="Google Cloud - WorkflowsUpdateWorkflowOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="WorkflowsGetWorkflowOperator" value="WorkflowsGetWorkflowOperator(&#10;    task_id=&#39;get_workflow&#39;, location=LOCATION, project_id=PROJECT_ID, workflow_id=WORKFLOW_ID&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/workflows.html#get-workflow&#10;" description="Google Cloud - WorkflowsGetWorkflowOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="WorkflowsListWorkflowsOperator" value="WorkflowsListWorkflowsOperator(&#10;    task_id=&#39;list_workflows&#39;,&#10;    location=LOCATION,&#10;    project_id=PROJECT_ID&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/workflows.html#list-workflows&#10;" description="Google Cloud - WorkflowsListWorkflowsOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="WorkflowsDeleteWorkflowOperator" value="WorkflowsDeleteWorkflowOperator(&#10;    task_id=&#39;delete_workflow&#39;, location=LOCATION, project_id=PROJECT_ID, workflow_id=WORKFLOW_ID&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/workflows.html#delete-workflow&#10;" description="Google Cloud - WorkflowsDeleteWorkflowOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="WorkflowsCreateExecutionOperator" value="WorkflowsCreateExecutionOperator(&#10;    task_id=&#39;create_execution&#39;,&#10;    location=LOCATION,&#10;    project_id=PROJECT_ID,&#10;    execution=EXECUTION,&#10;    workflow_id=WORKFLOW_ID&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/workflows.html#create-execution&#10;" description="Google Cloud - WorkflowsCreateExecutionOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="WorkflowExecutionSensor" value="WorkflowExecutionSensor(&#10;    task_id=&#39;wait_for_execution&#39;,&#10;    location=LOCATION,&#10;    project_id=PROJECT_ID,&#10;    workflow_id=WORKFLOW_ID,&#10;    execution_id=&#39;{{ task_instance.xcom_pull(&#39;create_execution&#39;, key=&#39;execution_id&#39;) }}&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/workflows.html#create-execution&#10;" description="Google Cloud - WorkflowExecutionSensor" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="WorkflowsGetExecutionOperator" value="WorkflowsGetExecutionOperator(&#10;    task_id=&#39;get_execution&#39;,&#10;    location=LOCATION,&#10;    project_id=PROJECT_ID,&#10;    workflow_id=WORKFLOW_ID,&#10;    execution_id=&#39;{{ task_instance.xcom_pull(&#39;create_execution&#39;, key=&#39;execution_id&#39;) }}&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/workflows.html#get-execution&#10;" description="Google Cloud - WorkflowsGetExecutionOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="WorkflowsListExecutionsOperator" value="WorkflowsListExecutionsOperator(&#10;    task_id=&#39;list_executions&#39;, location=LOCATION, project_id=PROJECT_ID, workflow_id=WORKFLOW_ID&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/workflows.html#list-executions&#10;" description="Google Cloud - WorkflowsListExecutionsOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="WorkflowsCancelExecutionOperator" value="WorkflowsCancelExecutionOperator(&#10;    task_id=&#39;cancel_execution&#39;,&#10;    location=LOCATION,&#10;    project_id=PROJECT_ID,&#10;    workflow_id=SLEEP_WORKFLOW_ID,&#10;    execution_id=&#39;{{ task_instance.xcom_pull(&#39;create_execution_for_cancel&#39;, key=&#39;execution_id&#39;) }}&#39;&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-google/stable/operators/cloud/workflows.html#cancel-execution&#10;" description="Google Cloud - WorkflowsCancelExecutionOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="DatabricksSubmitRunOperator" value="DatabricksSubmitRunOperator(task_id=&#39;notebook_task&#39;, json=notebook_task_params)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-databricks/stable/operators.html#id1&#10;" description="Google Cloud - DatabricksSubmitRunOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="AzureDataLakeStorageDeleteOperator" value="AzureDataLakeStorageDeleteOperator(&#10;        task_id=&#39;delete_task&#39;, path=REMOTE_FILE_PATH, recursive=True&#10;    )&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-microsoft-azure/stable/operators/adls.html#azuredatalakestoragedeleteoperator&#10;" description="Google Cloud - AzureDataLakeStorageDeleteOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="AzureBlobStorageToGCSOperator" value="AzureBlobStorageToGCSOperator(&#10;    task_id=&#39;transfer_files_to_gcs&#39;,&#10;    # AZURE args&#10;    wasb_conn_id=&#39;wasb_default&#39;,&#10;    container_name=AZURE_CONTAINER_NAME,&#10;    blob_name=BLOB_NAME,&#10;    file_path=GCP_OBJECT_NAME,&#10;    # GCP args&#10;    gcp_conn_id=&#39;google_cloud_default&#39;,&#10;    bucket_name=GCP_BUCKET_NAME,&#10;    object_name=GCP_OBJECT_NAME,&#10;    filename=GCP_BUCKET_FILE_PATH,&#10;    gzip=False,&#10;    delegate_to=None,&#10;    impersonation_chain=None&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-microsoft-azure/stable/operators/azure_blob_to_gcs.html#transfer-data-from-blob-storage-to-google-cloud-storage&#10;" description="Google Cloud - AzureBlobStorageToGCSOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="LocalToAzureDataLakeStorageOperator" value="LocalToAzureDataLakeStorageOperator(&#10;        task_id=&#39;upload_task&#39;,&#10;        local_path=LOCAL_FILE_PATH,&#10;        remote_path=REMOTE_FILE_PATH,&#10;    )&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-microsoft-azure/stable/operators/local_to_adls.html#localtoazuredatalakestorageoperator&#10;" description="Google Cloud - LocalToAzureDataLakeStorageOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="AWSDataSyncOperator" value="AWSDataSyncOperator(&#10;        aws_conn_id=&#39;aws_default&#39;, task_id=&#39;datasync_task_1&#39;, task_arn=TASK_ARN&#10;    )&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-amazon/stable/operators/datasync.html#get-datasync-tasks&#10;" description="Google Cloud - AWSDataSyncOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="ECSOperator" value="ECSOperator(&#10;    task_id=&#39;hello_world&#39;,&#10;    dag=dag,&#10;    aws_conn_id=&#39;aws_ecs&#39;,&#10;    cluster=&#39;c&#39;,&#10;    task_definition=&#39;hello-world&#39;,&#10;    launch_type=&#39;FARGATE&#39;,&#10;    overrides={&#10;        &#39;containerOverrides&#39;: [&#10;            {&#10;                &#39;name&#39;: &#39;hello-world-container&#39;,&#10;                &#39;command&#39;: [&#39;echo&#39;, &#39;hello&#39;, &#39;world&#39;],&#10;            },&#10;        ],&#10;    },&#10;    network_configuration={&#10;        &#39;awsvpcConfiguration&#39;: {&#10;            &#39;securityGroups&#39;: [os.environ.get(&#39;SECURITY_GROUP_ID&#39;, &#39;sg-123abc&#39;)],&#10;            &#39;subnets&#39;: [os.environ.get(&#39;SUBNET_ID&#39;, &#39;subnet-123456ab&#39;)],&#10;        },&#10;    },&#10;    tags={&#10;        &#39;Customer&#39;: &#39;X&#39;,&#10;        &#39;Project&#39;: &#39;Y&#39;,&#10;        &#39;Application&#39;: &#39;Z&#39;,&#10;        &#39;Version&#39;: &#39;0.0.1&#39;,&#10;        &#39;Environment&#39;: &#39;Development&#39;,&#10;    },&#10;    awslogs_group=&#39;/ecs/hello-world&#39;,&#10;    awslogs_stream_prefix=&#39;prefix_b/hello-world-container&#39;,  # prefix with container name&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-amazon/stable/operators/ecs.html#using-operator&#10;" description="Google Cloud - ECSOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="EmrCreateJobFlowOperator" value="EmrCreateJobFlowOperator(&#10;        task_id=&#39;create_job_flow&#39;,&#10;        job_flow_overrides=JOB_FLOW_OVERRIDES,&#10;        aws_conn_id=&#39;aws_default&#39;,&#10;        emr_conn_id=&#39;emr_default&#39;,&#10;    )&#10;    job_sensor = EmrJobFlowSensor(&#10;        task_id=&#39;check_job_flow&#39;,&#10;        job_flow_id=&#39;{{ task_instance.xcom_pull(task_ids=&#39;create_job_flow&#39;, key=&#39;return_value&#39;) }}&#39;,&#10;        aws_conn_id=&#39;aws_default&#39;,&#10;    )&#10;    job_flow_creator &gt;&gt; job_sensor&#39;&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-amazon/stable/operators/emr.html#defining-tasks&#10;" description="Google Cloud - EmrCreateJobFlowOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="GlacierCreateJobOperator" value="GlacierCreateJobOperator(&#10;    task_id=&#39;create_glacier_job&#39;,&#10;    aws_conn_id=&#39;aws_default&#39;,&#10;    vault_name=VAULT_NAME&#10;)JOB_ID = &#39;{{ task_instance.xcom_pull(&#39;create_glacier_job&#39;)[&#39;jobId&#39;] }}&#39;&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-amazon/stable/operators/glacier.html#glaciercreatejoboperator&#10;" description="Google Cloud - GlacierCreateJobOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="GlacierToGCSOperator" value="GlacierToGCSOperator(&#10;    task_id=&#39;transfer_archive_to_gcs&#39;,&#10;    aws_conn_id=&#39;aws_default&#39;,&#10;    gcp_conn_id=&#39;google_cloud_default&#39;,&#10;    vault_name=VAULT_NAME,&#10;    bucket_name=BUCKET_NAME,&#10;    object_name=OBJECT_NAME,&#10;    gzip=False,&#10;    # Override to match your needs&#10;    # If chunk size is bigger than actual file size&#10;    # then whole file will be downloaded&#10;    chunk_size=1024,&#10;    delegate_to=None,&#10;    google_impersonation_chain=None&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-amazon/stable/operators/glacier.html#glacierjoboperationsensor&#10;" description="Google Cloud - GlacierToGCSOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="GoogleApiToS3Operator" value="GoogleApiToS3Operator(&#10;        google_api_service_name=&#39;sheets&#39;,&#10;        google_api_service_version=&#39;v4&#39;,&#10;        google_api_endpoint_path=&#39;sheets.spreadsheets.values.get&#39;,&#10;        google_api_endpoint_params={&#39;spreadsheetId&#39;: GOOGLE_SHEET_ID, &#39;range&#39;: GOOGLE_SHEET_RANGE},&#10;        s3_destination_key=S3_DESTINATION_KEY,&#10;        task_id=&#39;google_sheets_values_to_s3&#39;,&#10;        dag=dag,&#10;    )&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-amazon/stable/operators/google_api_to_s3_transfer.html#get-google-sheets-sheet-values&#10;" description="Google Cloud - GoogleApiToS3Operator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="BranchPythonOperator" value="BranchPythonOperator(&#10;        python_callable=_check_and_transform_video_ids,&#10;        op_args=[task_video_ids_to_s3.google_api_response_via_xcom, task_video_ids_to_s3.task_id],&#10;        task_id=&#39;check_and_transform_video_ids&#39;,&#10;    )&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-amazon/stable/operators/google_api_to_s3_transfer.html#get-youtube-videos&#10;" description="Google Cloud - BranchPythonOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="DummyOperator" value="DummyOperator(task_id=&#39;no_video_ids&#39;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-amazon/stable/operators/google_api_to_s3_transfer.html#get-youtube-videos&#10;" description="Google Cloud - DummyOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="ImapAttachmentToS3Operator" value="ImapAttachmentToS3Operator(&#10;        imap_attachment_name=IMAP_ATTACHMENT_NAME,&#10;        s3_key=S3_DESTINATION_KEY,&#10;        imap_mail_folder=IMAP_MAIL_FOLDER,&#10;        imap_mail_filter=IMAP_MAIL_FILTER,&#10;        task_id=&#39;transfer_imap_attachment_to_s3&#39;,&#10;        dag=dag,&#10;    )&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-amazon/stable/operators/imap_attachment_to_s3.html#transfer-mail-attachments-via-imap-to-s3&#10;" description="Google Cloud - ImapAttachmentToS3Operator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="S3ToRedshiftOperator" value="S3ToRedshiftOperator(&#10;        s3_bucket=S3_BUCKET,&#10;        s3_key=S3_KEY,&#10;        schema=&#39;PUBLIC&#39;,&#10;        table=REDSHIFT_TABLE,&#10;        copy_options=[&#39;csv&#39;],&#10;        task_id=&#39;transfer_s3_to_redshift&#39;,&#10;    )&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-amazon/stable/operators/s3_to_redshift.html#copy-s3-key-into-redshift-table&#10;" description="Google Cloud - S3ToRedshiftOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="PapermillOperator" value="PapermillOperator(&#10;    task_id=&#39;run_example_notebook&#39;,&#10;    input_nb=&#39;/tmp/hello_world.ipynb&#39;,&#10;    output_nb=&#39;/tmp/out-{{ execution_date }}.ipynb&#39;,&#10;    parameters={&#39;msgs&#39;: &#39;Ran from Airflow at {{ execution_date }}!&#39;}&#10;)&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-papermill/stable/operators.html#example-dag&#10;" description="Google Cloud - PapermillOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="S3ToSnowflakeOperator" value="S3ToSnowflakeOperator(&#10;    task_id=&#39;copy_into_table&#39;,&#10;    snowflake_conn_id=SNOWFLAKE_CONN_ID,&#10;    s3_keys=[S3_FILE_PATH],&#10;    table=SNOWFLAKE_SAMPLE_TABLE,&#10;    schema=SNOWFLAKE_SCHEMA,&#10;    stage=SNOWFLAKE_STAGE,&#10;    file_format=&#39;(type = &#39;CSV&#39;,field_delimiter = &#39;;&#39;),&#10;    dag=dag&#10;)&#10;&#10;&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-snowflake/stable/operators/s3_to_snowflake.html#using-the-operator&#10;" description="Google Cloud - S3ToSnowflakeOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="SnowflakeOperator" value="SnowflakeOperator(&#10;    task_id=&#39;snowflake_op_sql_str&#39;,&#10;    dag=dag,&#10;    snowflake_conn_id=SNOWFLAKE_CONN_ID,&#10;    sql=CREATE_TABLE_SQL_STRING,&#10;    warehouse=SNOWFLAKE_WAREHOUSE,&#10;    database=SNOWFLAKE_DATABASE,&#10;    schema=SNOWFLAKE_SCHEMA,&#10;    role=SNOWFLAKE_ROLE&#10;)&#10;&#10;snowflake_op_with_params = SnowflakeOperator(&#10;    task_id=&#39;snowflake_op_with_params&#39;,&#10;    dag=dag,&#10;    snowflake_conn_id=SNOWFLAKE_CONN_ID,&#10;    sql=SQL_INSERT_STATEMENT,&#10;    parameters={&#39;id&#39;: 56},&#10;    warehouse=SNOWFLAKE_WAREHOUSE,&#10;    database=SNOWFLAKE_DATABASE,&#10;    schema=SNOWFLAKE_SCHEMA,&#10;    role=SNOWFLAKE_ROLE&#10;)&#10;&#10;snowflake_op_sql_list = SnowflakeOperator(&#10;    task_id=&#39;snowflake_op_sql_list&#39;, dag=dag, snowflake_conn_id=SNOWFLAKE_CONN_ID, sql=SQL_LIST&#10;)snowflake_op_sql_multiple_stmts = SnowflakeOperator(&#10;    task_id=&#39;snowflake_op_sql_multiple_stmts&#39;,&#10;    dag=dag,&#10;    snowflake_conn_id=SNOWFLAKE_CONN_ID,&#10;    sql=SQL_MULTIPLE_STMTS&#10;)&#10;&#10;snowflake_op_template_file = SnowflakeOperator(&#10;    task_id=&#39;snowflake_op_template_file&#39;,&#10;    dag=dag,&#10;    snowflake_conn_id=SNOWFLAKE_CONN_ID,&#10;    sql=&#39;/path/to/sql/&lt;filename&gt;.sql&#39;&#10;)&#10;&#10;&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-snowflake/stable/operators/snowflake.html#id1&#10;" description="Google Cloud - SnowflakeOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="SnowflakeToSlackOperator" value="SnowflakeToSlackOperator(&#10;    task_id=&#39;slack_report&#39;,&#10;    sql=SNOWFLAKE_SLACK_SQL,&#10;    slack_message=SNOWFLAKE_SLACK_MESSAGE,&#10;    snowflake_conn_id=SNOWFLAKE_CONN_ID,&#10;    slack_conn_id=SLACK_CONN_ID,&#10;    dag=dag&#10;)&#10;&#10;&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-snowflake/stable/operators/snowflake_to_slack.html#using-the-operator&#10;" description="Google Cloud - SnowflakeToSlackOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="SqliteOperator" value="SqliteOperator(&#10;    task_id=&#39;create_table_sqlite&#39;,&#10;    sqlite_conn_id=&#39;sqlite_conn_id&#39;,&#10;    sql=r&#39;&#39;&#10;    CREATE TABLE table_name (&#10;        column_1 string,&#10;        column_2 string,&#10;        column_3 string&#10;    );&#10;    &#39;&#39;,&#10;    dag=dag&#10;)&#10;&#10;&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-sqlite/stable/operators.html#id1&#10;" description="Google Cloud - SqliteOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
    <template name="TelegramOperator" value="TelegramOperator(&#10;    task_id=&#39;send_message_telegram&#39;,&#10;    telegram_conn_id=&#39;telegram_conn_id&#39;,&#10;    chat_id=&#39;-3222103937&#39;,&#10;    text=&#39;Hello from Airflow!&#39;,&#10;    dag=dag&#10;)&#10;&#10;&#10;# Reference: https://airflow.apache.org/docs/apache-airflow-providers-telegram/stable/operators.html#id1&#10;" description="Google Cloud - TelegramOperator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  </templateSet>